{"version":3,"sources":["webpack:///./src/templates/tag.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/components/UserLinks/UserLinks.jsx","webpack:///./src/components/Footer/Footer.jsx","webpack:///./src/components/Header/Header.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/components/PostListing/PostListing.jsx"],"names":["TagTemplate","render","tag","this","props","pageContext","postEdges","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_3__","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","config","siteTitle","_components_PostListing_PostListing__WEBPACK_IMPORTED_MODULE_4__","React","Component","pageQuery","siteTitleShort","siteTitleAlt","siteLogo","siteUrl","pathPrefix","siteDescription","siteRss","siteFBAppID","googleAnalyticsID","disqusShortname","postDefaultCategoryID","dateFromFormat","dateFormat","userName","userEmail","userTwitter","userLocation","userAvatar","userDescription","userLinks","label","url","iconClassName","copyright","themeColor","backgroundColor","replace","substr","slice","module","exports","UserLinks","getLinkElements","labeled","map","link","react_default","key","href","Footer","gatsby_browser_entry","to","components_UserLinks_UserLinks","Header","class","MainLayout","children","Helmet_default","name","content","components_Header_Header","components_Footer_Footer","PostListing","getPostList","postList","forEach","postEdge","push","path","node","fields","slug","tags","frontmatter","cover","date","excerpt","timeToRead","post","gatsby__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"yQAOqBA,4FACnBC,OAAA,WAAS,IACCC,EAAQC,KAAKC,MAAMC,YAAnBH,IACFI,EAAYH,KAAKC,MAAMG,KAAKC,kBAAkBC,MACpD,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAQK,MAAK,oBAAsBd,EAAtB,OAAgCe,IAAOC,YACpDR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAab,UAAWA,UAROc,IAAMC,WAgBlCC,EAAS,wCCvBtB,IAAML,EAAS,CACbC,UAAW,2BACXK,eAAgB,WAChBC,aAAc,2BACdC,SAAU,uBACVC,QAAS,oCACTC,WAAY,eACZC,gBAAiB,kDACjBC,QAAS,WACTC,YAAa,mBACbC,kBAAmB,gBACnBC,gBAAiB,iDACjBC,sBAAuB,kBACvBC,eAAgB,aAChBC,WAAY,aACZC,SAAU,mBACVC,UAAW,4BACXC,YAAa,GACbC,aAAc,kBACdC,WAAY,+CACZC,gBACE,gCAEFC,UAAW,CACT,CACEC,MAAO,SACPC,IAAK,sCACLC,cAAe,gBAEjB,CACEF,MAAO,UACPC,IAAK,sCACLC,cAAe,iBAEjB,CACEF,MAAO,QACPC,IAAK,mCACLC,cAAe,mBAGnBC,UAAW,4CACXC,WAAY,UACZC,gBAAiB,WAMO,MAAtB/B,EAAOU,WACTV,EAAOU,WAAa,GAGpBV,EAAOU,WAAP,IAAwBV,EAAOU,WAAWsB,QAAQ,WAAY,IAI9B,MAA9BhC,EAAOS,QAAQwB,QAAQ,KACzBjC,EAAOS,QAAUT,EAAOS,QAAQyB,MAAM,GAAI,IAGxClC,EAAOY,SAAiC,MAAtBZ,EAAOY,QAAQ,KACnCZ,EAAOY,QAAP,IAAqBZ,EAAOY,SAE9BuB,EAAOC,QAAUpC,4MCzCFqC,4GAlBbC,gBAAA,WAAkB,IACRb,EAAcvC,KAAKC,MAAMa,OAAzByB,UACAc,EAAYrD,KAAKC,MAAjBoD,QACR,OAAOd,EAAUe,IAAI,SAAAC,GAAI,OACvBC,EAAAhD,EAAAC,cAAA,KAAGgD,IAAKF,EAAKf,MAAOkB,KAAMH,EAAKd,KAC5BY,EAAUE,EAAKf,MAAQ,SAI9B1C,OAAA,WAEE,OADsBE,KAAKC,MAAMa,OAAzByB,UAIDiB,EAAAhD,EAAAC,cAAA,OAAKE,UAAU,cAAcX,KAAKoD,mBAFhC,SAbWlC,cC0BTyC,oGAtBb7D,OAAA,WACE,IAAM2C,EAAM3B,IAAOY,QACXiB,EAAc7B,IAAd6B,UACR,OAAKA,EAIHa,EAAAhD,EAAAC,cAAA,cACE+C,EAAAhD,EAAAC,cAAA,OAAKE,UAAU,aACb6C,EAAAhD,EAAAC,cAAA,YAAOkC,GACPa,EAAAhD,EAAAC,cAAA,OAAKE,UAAU,gBACb6C,EAAAhD,EAAAC,cAACmD,EAAA,KAAD,CAAMC,GAAIpB,GAAV,aAGAe,EAAAhD,EAAAC,cAACqD,EAAD,CAAWhD,OAAQA,IAAQuC,SAAO,OAVjC,SALQnC,cCaN6C,oGAdbjE,OAAA,WACE,OACE0D,EAAAhD,EAAAC,cAAA,cACE+C,EAAAhD,EAAAC,cAAA,OAAKE,UAAU,aACb6C,EAAAhD,EAAAC,cAAA,KAAGuD,MAAM,aAAaN,KAAK,KAAK5C,IAAOC,WACvCyC,EAAAhD,EAAAC,cAAA,WACE+C,EAAAhD,EAAAC,cAAA,KAAGE,UAAU,aAAa+C,KAAK,UAA/B,gBAPSxC,yDCGA+C,4FACnBnE,OAAA,WAAS,IACCoE,EAAalE,KAAKC,MAAlBiE,SACR,OACEV,EAAAhD,EAAAC,cAAA,OAAKE,UAAU,WACb6C,EAAAhD,EAAAC,cAAC0D,EAAA3D,EAAD,KACEgD,EAAAhD,EAAAC,cAAA,QAAM2D,KAAK,cAAcC,QAASvD,IAAOW,mBAE3C+B,EAAAhD,EAAAC,cAAC6D,EAAD,MACCJ,EACDV,EAAAhD,EAAAC,cAAC8D,EAAD,WAVgCtD,IAAMC,yFCJxCsD,oGACJC,YAAA,WACE,IAAMC,EAAW,GAYjB,OAXA1E,KAAKC,MAAME,UAAUwE,QAAQ,SAAAC,GAC3BF,EAASG,KAAK,CACZC,KAAMF,EAASG,KAAKC,OAAOC,KAC3BC,KAAMN,EAASG,KAAKI,YAAYD,KAChCE,MAAOR,EAASG,KAAKI,YAAYC,MACjCvE,MAAO+D,EAASG,KAAKI,YAAYtE,MACjCwE,KAAMT,EAASG,KAAKI,YAAYE,KAChCC,QAASV,EAASG,KAAKO,QACvBC,WAAYX,EAASG,KAAKQ,eAGvBb,KAET5E,OAAA,WAEE,OADiBE,KAAKyE,cAGXnB,IAAI,SAAAkC,GAAI,OACfjF,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAACgF,EAAA,KAAD,CAAM5B,GAAI2B,EAAKV,KAAMrB,IAAK+B,EAAK3E,OAC7BN,EAAAC,EAAAC,cAAA,UAAK+E,EAAK3E,QAEZN,EAAAC,EAAAC,cAAA,YAAO+E,EAAKH,MACZ9E,EAAAC,EAAAC,cAAA,SAAI+E,EAAKF,SACT/E,EAAAC,EAAAC,cAACgF,EAAA,KAAD,CAAM5B,GAAI2B,EAAKV,KAAMrB,IAAK+B,EAAK3E,OAC/BN,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAhB,qBA5BgBM,IAAMC,WAoCjBsD","file":"component---src-templates-tag-jsx-4edaa0f36f8bb4988aeb.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport config from \"../../data/SiteConfig\";\n\nexport default class TagTemplate extends React.Component {\n  render() {\n    const { tag } = this.props.pageContext;\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <Layout>\n        <div className=\"main-container\">\n          <Helmet title={`Posts tagged as \"${tag}\" | ${config.siteTitle}`} />\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","const config = {\n  siteTitle: \"Rebecca's Developer Blog\", // Site title.\n  siteTitleShort: \"Dev Blog\", // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\n  siteTitleAlt: \"Rebecca's Developer Blog\", // Alternative site title for SEO.\n  siteLogo: \"/logos/logo-1024.png\", // Logo used for SEO and manifest.\n  siteUrl: \"https://rebeccaeilering.github.io\", // Domain of your website without pathPrefix.\n  pathPrefix: \"/my-dev-blog\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-advanced-starter/.\n  siteDescription: \"A GatsbyJS stater with Advanced design in mind.\", // Website description used for RSS feeds/meta description tag.\n  siteRss: \"/rss.xml\", // Path to the RSS file.\n  siteFBAppID: \"1825356251115265\", // FB Application ID for using app insights\n  googleAnalyticsID: \"UA-47311644-5\", // GA tracking ID.\n  disqusShortname: \"https-vagr9k-github-io-gatsby-advanced-starter\", // Disqus shortname.\n  postDefaultCategoryID: \"Web Development\", // Default category for posts.\n  dateFromFormat: \"MM/DD/YYYY\", // Date format used in the frontmatter.\n  dateFormat: \"MM/DD/YYYY\", // Date format for display.\n  userName: \"Rebecca Eilering\", // Username to display in the author segment.\n  userEmail: \"rebeccaeilering@gmail.com\", // Email used for RSS feed's author segment\n  userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\n  userLocation: \"Springfield, IL\", // User location to display in the author segment.\n  userAvatar: \"https://api.adorable.io/avatars/150/test.png\", // User avatar to display in the author segment.\n  userDescription:\n    \"I'm a front end web developer\", // User description to display in the author segment.\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  userLinks: [\n    {\n      label: \"GitHub\",\n      url: \"https://github.com/rebeccaeilering/\",\n      iconClassName: \"fa fa-github\"\n    },\n    {\n      label: \"Twitter\",\n      url: \"https://twitter.com/rebeccaeilering\",\n      iconClassName: \"fa fa-twitter\"\n    },\n    {\n      label: \"Email\",\n      url: \"mailto:rebeccaeilering@gmail.com\",\n      iconClassName: \"fa fa-envelope\"\n    }\n  ],\n  copyright: \"Copyright Â© 2019 Rebecca's Developer Blog\", // Copyright string for the footer of the website and RSS feed.\n  themeColor: \"#c62828\", // Used for setting manifest and progress theme colors.\n  backgroundColor: \"#e0e0e0\" // Used for setting manifest background color.\n};\n\n// Validate\n\n// Make sure pathPrefix is empty if not needed\nif (config.pathPrefix === \"/\") {\n  config.pathPrefix = \"\";\n} else {\n  // Make sure pathPrefix only contains the first forward slash\n  config.pathPrefix = `/${config.pathPrefix.replace(/^\\/|\\/$/g, \"\")}`;\n}\n\n// Make sure siteUrl doesn't have an ending forward slash\nif (config.siteUrl.substr(-1) === \"/\")\n  config.siteUrl = config.siteUrl.slice(0, -1);\n\n// Make sure siteRss has a starting forward slash\nif (config.siteRss && config.siteRss[0] !== \"/\")\n  config.siteRss = `/${config.siteRss}`;\n\nmodule.exports = config;\n","import React, { Component } from \"react\";\nimport \"./UserLinks.css\";\n\nclass UserLinks extends Component {\n  getLinkElements() {\n    const { userLinks } = this.props.config;\n    const { labeled } = this.props;\n    return userLinks.map(link => (\n      <a key={link.label} href={link.url}>\n        {labeled ? link.label : \"\"}\n      </a>\n    ));\n  }\n  render() {\n    const { userLinks } = this.props.config;\n    if (!userLinks) {\n      return null;\n    }\n    return <div className=\"user-links\">{this.getLinkElements()}</div>;\n  }\n}\n\nexport default UserLinks;\n","import React, { Component } from \"react\";\nimport { Link } from \"gatsby\";\nimport UserLinks from \"../UserLinks/UserLinks\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./Footer.css\";\n\nclass Footer extends Component {\n  render() {\n    const url = config.siteRss;\n    const { copyright } = config;\n    if (!copyright) {\n      return null;\n    }\n    return (\n      <footer>\n        <div className=\"container\">\n          <span>{copyright}</span>\n          <div className=\"social-links\">\n            <Link to={url}>\n              Subscribe\n            </Link>\n            <UserLinks config={config} labeled />\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n\n","import React, { Component } from \"react\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./Header.css\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <header>\n        <div className=\"container\">\n          <a class=\"site-title\" href=\"/\">{config.siteTitle}</a>\n          <nav>\n            <a className=\"header-btn\" href=\"/about\">About</a>\n          </nav>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../data/SiteConfig\";\nimport Footer from \"../components/Footer/Footer\";\nimport Header from \"../components/Header/Header\";\nimport \"../assets/css/main.css\";\n\nexport default class MainLayout extends React.Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <div className=\"wrapper\">\n        <Helmet>\n          <meta name=\"description\" content={config.siteDescription} />\n        </Helmet>\n        <Header />\n        {children}\n        <Footer />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const postList = [];\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.frontmatter.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      });\n    });\n    return postList;\n  }\n  render() {\n    const postList = this.getPostList();\n    return (\n      /* Your post list here. */\n      postList.map(post => (\n        <article>\n          <Link to={post.path} key={post.title}>\n            <h3>{post.title}</h3>\n          </Link>\n          <span>{post.date}</span>\n          <p>{post.excerpt}</p>\n          <Link to={post.path} key={post.title}>\n          <span className=\"readmore\">Read More</span>\n          </Link>\n        </article>\n      ))\n    );\n  }\n}\n\nexport default PostListing;\n"],"sourceRoot":""}