<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Rebecca's Developer Blog]]></title><description><![CDATA[A GatsbyJS stater with Advanced design in mind.]]></description><link>https://rebeccaeilering.github.io/my-dev-blog</link><image><url>https://rebeccaeilering.github.io/my-dev-blog/logos/logo-512.png</url><title>Rebecca&apos;s Developer Blog</title><link>https://rebeccaeilering.github.io/my-dev-blog</link></image><generator>GatsbyJS Advanced Starter</generator><lastBuildDate>Sat, 02 Nov 2019 02:48:03 GMT</lastBuildDate><atom:link href="https://rebeccaeilering.github.io/my-dev-blog/rss.xml" rel="self" type="application/rss+xml"/><copyright><![CDATA[Copyright © 2019 Rebecca's Developer Blog]]></copyright><item><title><![CDATA[Using the URL to Change HTML Attributes]]></title><description><![CDATA[I don't use a whole lot of JavaScript on a day-to-day basis. This week was an exception. There were a couple occasions I had to make sure…]]></description><link>https://rebeccaeilering.github.io/my-dev-blog/using-the-url-to-change-html-attributes</link><guid isPermaLink="false">https://rebeccaeilering.github.io/my-dev-blog/using-the-url-to-change-html-attributes</guid><category><![CDATA[jquery]]></category><category><![CDATA[attributes]]></category><pubDate>Tue, 29 Oct 2019 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I don&apos;t use a whole lot of JavaScript on a day-to-day basis. This week was an exception. There were a couple occasions I had to make sure some elements only show on certain pages and creating new templates would be overkill. It would be easier to use the URL to target certain pages and then make changes to the code.&lt;/p&gt;
&lt;p&gt;I want to replace the href and title value of an already existing anchor tag/button. This button is on all the subpages but we need to change the href and title on just a small group of subpages and leave the rest alone.&lt;/p&gt;
&lt;p&gt;My first line of thought is to make a new template with the button that has the new url and title values and then change the template for all the pages. I need to make a new master template and the companion master.vb file. Then since the button is in a widget.ascx file I also need to make a new one of those plus it&apos;s companion ascx.vb file. OMG, that&apos;s a lot of work and a lot of reapeated code. To change one line of HTML we need four new files and then change the template for nearly 20 pages? This is crazy and super ineffecient.&lt;/p&gt;
&lt;p&gt;I can do what I need to in just a few lines of JavaScript. &lt;/p&gt;
&lt;p&gt;Here&apos;s the code (but I&apos;m changing urls, class names and title text so I&apos;m not sharing code that is specific to work projects). On all the pages there is a button to signup to a newsletter. However, for the dog and cat pages there&apos;s a different sign up form. All these pages use the same subpage template. None of the HTML code needs to be touched.&lt;/p&gt;
&lt;p&gt;HTML:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;html&quot;&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;sign-up&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;/animals/newsletter-signup/&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Sign up for our newsletter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Newsletter Signup&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;JavaScript:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;document&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;href&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;cats&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;.sign-up a&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;href&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;/animals/cat-newsletter-signup/&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; title&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Sign up for our cat newsletter&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;href&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;dogs&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;.sign-up a&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;href&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;/animals/dog-newsletter-signup/&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; title&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Sign up for our dog newsletter&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So what is happening here?&lt;/p&gt;
&lt;p&gt;First, we have to wait until the document is ready. The DOM is loaded. &lt;/p&gt;
&lt;p&gt;Second, we are looking for a specific part of a URL in the conditional&apos;s argument. &lt;code class=&quot;language-text&quot;&gt;Window.location.href&lt;/code&gt; is a DOMstring that contains the entire URL. Adding the &lt;code class=&quot;language-text&quot;&gt;indexOf()&lt;/code&gt; method is going to return the first occurance of the specified value in a string. In this case the value is either going to be cats or dogs. If the method returns a -1, the value doesn&apos;t exist. Essentialy &lt;code class=&quot;language-text&quot;&gt;window.location.href.indexOf(&amp;quot;cats&amp;quot;) &amp;gt; -1&lt;/code&gt; is saying if the value of cats exists in the URL then we do something.&lt;/p&gt;
&lt;p&gt;Next, we need to target the element that needs to be changed. We need to change a couple attributes of an anchor tag inside of a div that has the class of &lt;code class=&quot;language-text&quot;&gt;.sign-up&lt;/code&gt;. To do this we use the &lt;code class=&quot;language-text&quot;&gt;.attr()&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;If you only want to add or change one attribute value you&apos;d do something like this:
&lt;code class=&quot;language-text&quot;&gt;.attr(&amp;#39;href&amp;#39;, &amp;#39;/animals/cats/newsletter-signup/&amp;#39; )&lt;/code&gt;
The first part, href, is the attribute&apos;s name. The second part is the attribute&apos;s value.&lt;/p&gt;
&lt;p&gt;If you want to add or change multiple attributes at the same time you put them into an object using curly brackets like so:
&lt;code class=&quot;language-text&quot;&gt;.attr({href: &amp;#39;/animals/dogs/newsletter-signup/&amp;#39;, title: &amp;#39;Sign up for our dog newsletter&amp;#39;})&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;That&apos;s really about it. &lt;/p&gt;
&lt;h2 id=&quot;references&quot;&gt;&lt;a href=&quot;#references&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;References&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://api.jquery.com/attr/&quot;&gt;jQuery Docs .attr()&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf&quot;&gt;indexOf() MDN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/location&quot;&gt;Window.location MDN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Location&quot;&gt;Location properties MDN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DOMString&quot;&gt;What&apos;s a DOMString?&lt;/a&gt;&lt;/p&gt;</content:encoded><author>rebeccaeilering@gmail.com</author></item><item><title><![CDATA[Why I Ditched WordPress]]></title><description><![CDATA[Shhhhh I haven't completely ditched WordPress. I just wanted to make a half-assed click-bait title. I still have a site that uses WordPress…]]></description><link>https://rebeccaeilering.github.io/my-dev-blog/why-i-ditched-word-press</link><guid isPermaLink="false">https://rebeccaeilering.github.io/my-dev-blog/why-i-ditched-word-press</guid><category><![CDATA[web development]]></category><category><![CDATA[front end development]]></category><pubDate>Sun, 29 Sep 2019 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Shhhhh I haven&apos;t completely ditched WordPress. I just wanted to make a half-assed click-bait title. I still have a site that uses WordPress but I&apos;m trying to migrate away. &lt;/p&gt;
&lt;p&gt;Why move away from WordPress? It&apos;s a very popular blogging/CMS platform. It&apos;s used by a large percentage of websites/blogs all around the globe. It&apos;s easy to set up and build because many hosting platfroms have WordPress baked right in. All it takes is clicking a button and a basic WordPress site magically appears. Choose one theme out of millions or use their defaults. Choose some plugins. Within an hour you have a nice looking website. Crazy, right?&lt;/p&gt;
&lt;p&gt;This is fine and dandy if you&apos;re not a web developer and want something fast and easy to use. You don&apos;t need developer skills to put together a website (though you still need to be web savvy and maybe have some basic coding knowledge). Darn it, you got other things to do.&lt;/p&gt;
&lt;p&gt;A web developer may want to use WordPress if he/she is interested in WordPress development. There is nothing wrong with that. In fact, a web developer with WordPress skills is someone that is still highly sought after and will be in the near future. &lt;/p&gt;
&lt;p&gt;This all doesn&apos;t sound bad. It&apos;s not. To many millions this is great and it works. It&apos;s versitile - it&apos;s great for the novice to an experienced, well-seasoned developer.&lt;/p&gt;
&lt;p&gt;For me, well, it was too much. I just used it for small personal sites, like my own site, and a blog I never used. I just didn&apos;t need a lot of the functionality. I didn&apos;t need a database. There. That&apos;s it.&lt;/p&gt;
&lt;p&gt;Whoah not so fast! Why is it &quot;too much&quot;, you may ask? First there&apos;s the constant updating to versions of WordPress and worrying it may break my entire site (that dreaded white screen of death). This has to be done because if you don&apos;t update, you open your site up to security risks.&lt;/p&gt;
&lt;p&gt;Second, plugin fatigue. So many plugins. Either I become a PHP whiz and build my own plugins or I find a plugin for about everything. There&apos;s contact form plugins, SEO plugins, carousel plugins, the essential Hello Dolly plugin. This list goes on and on. These are more things to keep updated or you open the door to security risks. Plugins are developed by people from all over. They may break and then you hope they fix it soon. Even worse is if you choose a plugin and the developer abandons it. You won&apos;t get help. It won&apos;t get fixed. You start with a handfull of plugins and then before you know it you have twenty plugins that need to be maintained.&lt;/p&gt;
&lt;p&gt;In the end, I just wanted simplicity. I don&apos;t need a CMS. I have a tiny personal site and I use a build system (like Gulp) and do a static site. I can do everything with front-end code and not have to mess with PHP. It&apos;s small and lean. I host on Netlify so it&apos;s hooked right into my git repo. Pushing to production is a cinch. Netlify also handles my form submissions. Cool! For this blog, I just use Gatsby. Again, just front-end tools to build a blog. I use markdown to write posts. &lt;/p&gt;
&lt;p&gt;For me this works and is easy for me to maintain. Would I do this for clients? Probably not. Heck, I would possibly reach out to WordPress or other website builders because I&apos;d like to get it going quickly and I&apos;d need something clients could easily use. Maybe I would look into Netlify CMS or something else. In the end, the tools you choose should work with what you are trying to accomplish.  &lt;/p&gt;</content:encoded><author>rebeccaeilering@gmail.com</author></item><item><title><![CDATA[My Second Year As A Web Developer]]></title><description><![CDATA[Another year has passed by. Since last year, our department has moved into a new building and I'm getting used to living in a smaller city…]]></description><link>https://rebeccaeilering.github.io/my-dev-blog/my-second-year-as-a-web-developer</link><guid isPermaLink="false">https://rebeccaeilering.github.io/my-dev-blog/my-second-year-as-a-web-developer</guid><category><![CDATA[web development]]></category><category><![CDATA[self assessment]]></category><category><![CDATA[career]]></category><pubDate>Wed, 18 Sep 2019 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Another year has passed by. Since last year, our department has moved into a new building and I&apos;m getting used to living in a smaller city. I&apos;ve still struggled with my confidence but I&apos;ve been taking steps to work on that. I&apos;ve given a lot of focus to getting better at JavaScript. In fact we&apos;re making the transition to using the ES6 syntax and moving away from jQuery. I like that becuase I can more-or-less just focus on raw JavaScript.&lt;/p&gt;
&lt;p&gt;What have I learned this year?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I still have a lot to learn but I always will have a lot to learn because web development is always evolving.&lt;/li&gt;
&lt;li&gt;I&apos;m better at JavaScript than I was last year. I&apos;m more confident and I&apos;m more willing to take on issues and soving problems with JS.&lt;/li&gt;
&lt;li&gt;I can do about anything in CSS and I feel more comfortable with more complex stuff like animations, using pseudo selectors, calc functions, transforms, etc,...&lt;/li&gt;
&lt;li&gt;Accessibility is getting easier. I still get confused and have to ask questions but I certainly understand more.&lt;/li&gt;
&lt;li&gt;I write down my daily accomplishments. This has helped me see the things I do on a daily basis that I succeed at. It has helped me see that I make progress every day and will eventually solve any issues I&apos;m having. It&apos;s a confidence booster.&lt;/li&gt;
&lt;li&gt;Along with writing JavaScript, I&apos;m getting better at debugging it. &lt;/li&gt;
&lt;li&gt;A lot of the same things from last year apply. &lt;a href=&quot;/my-dev-blog/my-dev-blog/my-first-year-as-a-web-developer&quot;&gt;My First Year As A Web Developer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now that another year has passed, what do I hope to accomplish in the next year?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;More site construction projects. I didn&apos;t do much on that front except help with projects. However, I built a lot of landing pages this year.&lt;/li&gt;
&lt;li&gt;I want to continue to develop my skills with JavaScript. I want to get better with APIs, higher order functions. On a personal level I want to learn more about server side JS (Node.js) too. The main thing is to keep building stuff. I signed up to a daily newsletter from this site &lt;a href=&quot;https://gomakethings.com/&quot;&gt;Go Make Things&lt;/a&gt;. The newsletter essentially sends the daily tip to my inbox. It&apos;s given me ideas and has helped me in my learning.&lt;/li&gt;
&lt;li&gt;Still work on my confidence and not get so frustrated when I don&apos;t solve problems as quickly as I&apos;d like to.&lt;/li&gt;
&lt;li&gt;Ask more questions and speak up more in meetings.&lt;/li&gt;
&lt;li&gt;Learn more because I&apos;m never going to know everything.&lt;/li&gt;
&lt;li&gt;Use my standing desk more.&lt;/li&gt;
&lt;/ul&gt;</content:encoded><author>rebeccaeilering@gmail.com</author></item><item><title><![CDATA[Dipping Into Higher Order Functions]]></title><description><![CDATA[This is something that intimidates me a lot. I've done lots of simple functions - mostly ones with event listeners. Even the name…]]></description><link>https://rebeccaeilering.github.io/my-dev-blog/dipping-into-higher-order-functions</link><guid isPermaLink="false">https://rebeccaeilering.github.io/my-dev-blog/dipping-into-higher-order-functions</guid><category><![CDATA[javascript]]></category><category><![CDATA[web development]]></category><category><![CDATA[front end development]]></category><category><![CDATA[higher order functions]]></category><pubDate>Mon, 02 Sep 2019 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;This is something that intimidates me a lot. I&apos;ve done lots of simple functions - mostly ones with event listeners. Even the name intimidates me. It sounds much to advanced for my art educated brain.&lt;/p&gt;
&lt;h2 id=&quot;what-is-a-higher-order-function&quot;&gt;&lt;a href=&quot;#what-is-a-higher-order-function&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is a higher order function?&lt;/h2&gt;
&lt;p&gt;It&apos;s a function that accepts and/or returns another function.&lt;/p&gt;
&lt;p&gt;I did this one. The first function does some math. It takes a value and multiplies it by 2. Then I pass this function into another function that interacts with the DOM to grab an input value when the Enter button is pressed, store it in a variable and then outputs the calculated number into a string.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;multiplier&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;factor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; factor&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; doubler &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;multiplier&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; input &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;number&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; answer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;answer&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

input&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;keyup&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;keyCode &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; number &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; input&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    answer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;textContent &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Your doubled number is: &apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;doubler&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;number&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    answer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;classList&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;active&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can do your own just as I did here but JavaScript has higher order functions built into the language too. Here&apos;s a few commonly used ones:&lt;/p&gt;
&lt;h2 id=&quot;map&quot;&gt;&lt;a href=&quot;#map&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Map()&lt;/h2&gt;
&lt;p&gt;Map() executes a callback function once for each element in a array, in order and constructs a new array. &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map&quot;&gt;More info on map()&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;filter&quot;&gt;&lt;a href=&quot;#filter&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Filter()&lt;/h2&gt;
&lt;p&gt;Filter() creates a new array with all the elements that pass a test provided by the callback function. In short it will filter items out. &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter&quot;&gt;More info on filter()&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;reduce&quot;&gt;&lt;a href=&quot;#reduce&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reduce()&lt;/h2&gt;
&lt;p&gt;Reduce() executes a callback function on each element of an array, resulting in a single output value.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce&quot;&gt;More info on reduce()&lt;/a&gt;&lt;/p&gt;</content:encoded><author>rebeccaeilering@gmail.com</author></item><item><title><![CDATA[Recording Accomplishments]]></title><description><![CDATA[This year is flying by. I've been busy at my job. I'm almost at my two year mark at LRS. So far so good. Yet, I get down on myself still. I…]]></description><link>https://rebeccaeilering.github.io/my-dev-blog/recording-accomplishments</link><guid isPermaLink="false">https://rebeccaeilering.github.io/my-dev-blog/recording-accomplishments</guid><category><![CDATA[productivity]]></category><category><![CDATA[imposter syndrome]]></category><pubDate>Wed, 28 Aug 2019 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;This year is flying by. I&apos;ve been busy at my job. I&apos;m almost at my two year mark at LRS. So far so good.&lt;/p&gt;
&lt;p&gt;Yet, I get down on myself still. I&apos;ve felt that I hadn&apos;t accomplished much or I&apos;m just not doing enough to become a better developer.&lt;/p&gt;
&lt;p&gt;I don&apos;t know where I got the idea but a few weeks ago I decided to set up a folder in my Google Drive and then jot down my daily &quot;wins&quot; or accomplishments. I don&apos;t care how small the wins are or if they are from work or my own personal projects. I don&apos;t have to finish a task but if I&apos;m making progress that means I&apos;m going forward.&lt;/p&gt;
&lt;p&gt;In doing so I have felt better. I&apos;m making notes on things I thought were challenging. What I like is having a record that I can look back on. I also like that even if I&apos;m having trouble on a specific task, I still have a bunch of others that I didn&apos;t have trouble with. It&apos;s rare I get nothing done (I do have one day a week where I may not get anyting done. That&apos;s called taking the day off to get refreshed).&lt;/p&gt;
&lt;p&gt;Obviously before I started recording my accomplishments, I was accomplishing things. However, when I wasn&apos;t recording them, I&apos;d just forget about it. I do so much my days just blend together so normally I can&apos;t remember what I did 5 days ago. I would get so caught up in the moment. If I was failing at solving a task, I was a failure. If I solved a problem, I was a genius. It was like a rollercoaster. Now that I have a record, I can look back and know that I consistently get stuff done. I&apos;m generally doing well. I&apos;m progressing. I&apos;m not failing. On tough days I can look at it and feel better. &lt;/p&gt;
&lt;p&gt;I&apos;d very much recommend recording your accomplishments. Find a method that works for you. It can be in a fancy app or in a notebook where you jot them down with a pen. It only takes a few minutes and it&apos;s worth that time.&lt;/p&gt;
&lt;p&gt;Now I&apos;m going to add to my accomplishments: &quot;Wrote my first blog post in months.&quot;&lt;/p&gt;</content:encoded><author>rebeccaeilering@gmail.com</author></item><item><title><![CDATA[Report: Midway Through 2019]]></title><description><![CDATA[Not much happening around here right now. I took a little break from personal projects to work of some art/drawing. I hadn't done any of…]]></description><link>https://rebeccaeilering.github.io/my-dev-blog/report-midway-through-2019</link><guid isPermaLink="false">https://rebeccaeilering.github.io/my-dev-blog/report-midway-through-2019</guid><category><![CDATA[web development]]></category><category><![CDATA[assessment]]></category><category><![CDATA[goals]]></category><pubDate>Sun, 07 Jul 2019 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Not much happening around here right now. I took a little break from personal projects to work of some art/drawing. I hadn&apos;t done any of that in a while so I wanted to dive into that for a little bit. Mainly I was getting some sketches together for a local art event called, &quot;Paint The Streets&quot; that was held in late June. I did work hard and was pleased with my results. No awards though. However, I was sore for about 4 days.&lt;/p&gt;
&lt;p&gt;When it comes to web development, I&apos;ve been mostly working on stuff for work and then just some tiny little things on Codepen and doing a few API related tutorials.&lt;/p&gt;
&lt;p&gt;I realize I haven&apos;t been posting lately and we are, at this point, more than half through the year so I thought I could look at the goals I made at the beginning of the year and see how I&apos;m doing.&lt;/p&gt;
&lt;h2 id=&quot;initial-goals-and-how-im-doing&quot;&gt;&lt;a href=&quot;#initial-goals-and-how-im-doing&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Initial Goals and How I&apos;m Doing&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Being patient and kinder to myself. As expected, I&apos;m still struggling with this. I know I did go off the rails at least once with an html email project. Generally, I haven&apos;t lost my temper too much or beat up on myself way too much. I think the times I did, I was tired and was in a rotten mood becuase I hadn&apos;t got much sleep and was sore/hurt. I still need to work on this though - a lot.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Continuing my JavaScript path. I can say I&apos;m getting better. I&apos;m feeling more confident and am solving more JavaScript related problems at work and building in some more functionality based on requests from clients. I can think of a couple little things I did for clients recently. The first one was displaying search results in alpha order. The other was building date parameters into a slider carousel so the client can display specific slides based on date.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Being more consistent with my projects. I was doing good with this but I was starting to feel a little burnt out on it. Lately, I have been taking some time for other hobbies like art, looking for a cardio boxing gym, doing some hiking meetups to try to meet people and be more social outside work. Because of this, the work on personal projects in the past month has been sporatic. Generally though, I have been doing good with this.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I haven&apos;t got rid of the old website but I did remove a lot of features from it. I removed the form becuase I don&apos;t want people contacting me through that site and lately I&apos;ve been getting a lot of spam. Essentially, the homepage features some old blog entries from when I used to ride my bike around St. Louis. I&apos;ll probably keep the site as an archive of these.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I haven&apos;t started any sort of persoal project with C# or Python yet.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;other-javascript-related-things&quot;&gt;&lt;a href=&quot;#other-javascript-related-things&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other JavaScript related things&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Working with APIs&lt;/li&gt;
&lt;li&gt;Tab focus on navigation dropdowns&lt;/li&gt;
&lt;li&gt;Playing with an JS animation engine called Zdog&lt;/li&gt;
&lt;li&gt;Playing with a JS physics engine called Matter.js&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&apos;m not really working on the Gatsby site for the cat. There was another Gatsby thing I was working on becuase I was thinking of doing another blog. However, I think I&apos;m going to scrap it because I just don&apos;t want to make the time for another blog. I barely make time for this one.&lt;/p&gt;
&lt;p&gt;I haven&apos;t done anything with Vue yet.&lt;/p&gt;
&lt;h2 id=&quot;assessment&quot;&gt;&lt;a href=&quot;#assessment&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Assessment&lt;/h2&gt;
&lt;p&gt;I have been more kind to myself but I still need to work on this issue. I feel like I&apos;m making progress with JavaScript. I&apos;ve been consistent with personal projects but have accepted that sometimes I need breaks to do other things. I haven&apos;t removed the old website but I haven&apos;t becuase there are some aspects of it I want to preserve after all.&lt;/p&gt;
&lt;p&gt;I do need to try some new things like Vue, C# or Python though. I&apos;m not sure I can do all but I should try one by the end of the year.&lt;/p&gt;
&lt;h2 id=&quot;other-thoughts&quot;&gt;&lt;a href=&quot;#other-thoughts&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Thoughts&lt;/h2&gt;
&lt;p&gt;I know most of my focus is on JavaScript but I&apos;ve been trying to incorporate more CSS Grid, SVG, animation and interactivity into things I work on too. In addition to all of that, I&apos;ve been working on a lot of accessibility things for work but not really implementing much on my own sites/projects out of pure laziness. I do find I still get confused about certain aspects of accessibility. I think it&apos;s important that I work on that too.&lt;/p&gt;</content:encoded><author>rebeccaeilering@gmail.com</author></item><item><title><![CDATA[Moving My Blog to Gatsby]]></title><description><![CDATA[For a couple weeks my blog completely disappeared resulting in the link to my blog from my website being broke. This resulted from my…]]></description><link>https://rebeccaeilering.github.io/my-dev-blog/moving-my-blog-to-gatsby</link><guid isPermaLink="false">https://rebeccaeilering.github.io/my-dev-blog/moving-my-blog-to-gatsby</guid><category><![CDATA[javascript]]></category><category><![CDATA[static site generator]]></category><category><![CDATA[web development]]></category><category><![CDATA[gatsby]]></category><category><![CDATA[jekyll]]></category><category><![CDATA[react]]></category><pubDate>Sun, 05 May 2019 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;For a couple weeks my blog completely disappeared resulting in the link to my blog from my website being broke.&lt;/p&gt;
&lt;p&gt;This resulted from my purchase of a new MacBook Air(MBA) and not being able to get Jekyll installed. The problem wasn&apos;t Jekyll itself but with Ruby. My MBA runs MacOS Mojove and a version of Ruby that doesn&apos;t meet Jekyll&apos;s minimum system requirements. I tried following the directions on the &lt;a href=&quot;Jekyll%20website&amp;#x27;s%20documentation&quot;&gt;https://jekyllrb.com/docs/installation/macos/&lt;/a&gt; and didn&apos;t understand it. I understook installing Homebrew and got a version of Ruby installed. However, I now have two version installed and can&apos;t figure out how to run the correct on.&lt;/p&gt;
&lt;p&gt;I specifically don&apos;t understand this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;// add the brew ruby path to your shell config
export PATH=/usr/local/opt/ruby/bin:$PATH&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I don&apos;t understand this either:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;// append your path file with the following, replacing the X.X with the first two digits of your Ruby version
export PATH=$HOME/.gem/ruby/X.X.0/bin:$PATH&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Anyway, my level of frustration was high and I just decided to kill it. Start over. I wiped out the repo and rendered the site as dead.&lt;/p&gt;
&lt;h2 id=&quot;move-to-gatsby&quot;&gt;&lt;a href=&quot;#move-to-gatsby&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Move to Gatsby&lt;/h2&gt;
&lt;p&gt;On my new computer, I had no issues with Gatsby. After all it&apos;s just javascript. I installed node.js and then the Gatsby CLI and I was ready. It all works so I have been transferring my everything from my Jekyll build to the Gatsby build.&lt;/p&gt;
&lt;p&gt;Overall it&apos;s been simple and relatively painless. I don&apos;t have a huge amount of posts so that wasn&apos;t a problem. The biggest job was just getting the structure and styling in place.  Again, this wasn&apos;t that difficult and in the meantime I made a few changes.&lt;/p&gt;
&lt;h2 id=&quot;thoughts-of-jekyll&quot;&gt;&lt;a href=&quot;#thoughts-of-jekyll&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thoughts of Jekyll&lt;/h2&gt;
&lt;p&gt;I did like it and when I started using it the Liquid code sort of reminded my of PHP and at my previous job we built sites on PHP. Since starting my new job, I haven&apos;t touched PHP. However, my biggest hurdle with Jekyll was Ruby. I just don&apos;t know much about it and it&apos;s not a learning path I was wanting to take. In the end, my investment in javascript is high and for me it just makes more sense to build in the javascript/React/Gatsby ecosystem. It&apos;s just more relevant to me.&lt;/p&gt;
&lt;p&gt;I don&apos;t think Jekyll is bad but I do feel like there are more hurdles if you&apos;re not familiar with Liquid or Ruby. &lt;/p&gt;
&lt;h2 id=&quot;how-i-built-this&quot;&gt;&lt;a href=&quot;#how-i-built-this&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How I Built This&lt;/h2&gt;
&lt;p&gt;When I built my blog on Jekyll I just modified the default theme which is called Minima. It doesn&apos;t have a lot of features built in. I had to build my own categories functionality. I wasn&apos;t doing a huge amount of customization. I was just adding features and functionality as I went along.&lt;/p&gt;
&lt;p&gt;When moving to Gatsby, I suppose I could have just built from the starter theme which I think is about as minimal as the default theme. Actually, I think the Gatsby starter is even more minimal. That said, I decided to add a different starter theme. I am using &lt;a href=&quot;Gatsby-Advanced-Starter&quot;&gt;https://github.com/Vagr9K/gatsby-advanced-starter&lt;/a&gt;. The main thing was it has all the blog functionality but very little styling and html structure. It probably has more features that I need but I also like how it has SEO and social features built in.&lt;/p&gt;</content:encoded><author>rebeccaeilering@gmail.com</author></item><item><title><![CDATA[Using Fetch vs XHR]]></title><description><![CDATA[I have no idea how to work databases. I'm highly intimidated by them. I have been using JSON for data in personal projects but I certainly…]]></description><link>https://rebeccaeilering.github.io/my-dev-blog/using-fetch-vs-xhr</link><guid isPermaLink="false">https://rebeccaeilering.github.io/my-dev-blog/using-fetch-vs-xhr</guid><category><![CDATA[xhr]]></category><category><![CDATA[fetch api]]></category><category><![CDATA[json]]></category><pubDate>Wed, 10 Apr 2019 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I have no idea how to work databases. I&apos;m highly intimidated by them. I have been using JSON for data in personal projects but I certainly wouldn&apos;t say they are databases. However, JSON allows me to do some more dynamic stuff and create personal projects I find to be more interesting and useful. &lt;/p&gt;
&lt;p&gt;Though without much server side or database knowledge, I find some of my personal projects limiting. However, I don&apos;t want to be full stack (yet) and want to focus on a limited amount of things specific to HTML, CSS, and JavaScript. On the flipside, I don&apos;t just want to make static websites that don&apos;t do anything other than present info like a brochure. Seems boring to me.&lt;/p&gt;
&lt;p&gt;It seems a bit ridiculous but I&apos;ve been working on a project to create a searchable inventory of 45s (7 inch vinyl singles played on record players) for over two years. Maybe it&apos;s three years at this point. I don&apos;t know. My biggest hangup has been documenting the singles into the JSON file. This is literally typing in each record and the info associated with it (artist, song on the a side, song on the b side) and it&apos;s boring boring boring. The other part is pulling in and parsing the JSON. That hasn&apos;t taken 2-3 years to figure out (thank goodness). Then there is the styling but that&apos;s not an issue for me. It&apos;s taking so long because of laziness.&lt;/p&gt;
&lt;p&gt;Originally for this project I was using XHR (XMLHttpRequest) to pull in and parse the data from my JSON file. Recently, I decided to refactor the code to use the Fetch API to handle that functionality. Both work just fine from what I can tell.&lt;/p&gt;
&lt;p&gt;Here is the XHR code:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; xhttp &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;XMLHttpRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
xhttp&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;GET&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;records.json&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
xhttp&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;displayRecords&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;readyState &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;status &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; response &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xhttp&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;responseText&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; records &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;records&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        records&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;a&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; b&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; a&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;artist&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; y &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; b&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;artist&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
                        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; output &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; records&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            output &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; 
            &lt;span class=&quot;token string&quot;&gt;&apos;&amp;lt;div class=&quot;artist-song close&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
                &lt;span class=&quot;token string&quot;&gt;&apos;&amp;lt;h3 class=&quot;title&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; records&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;artist &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&amp;lt;/h3&gt;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
                &lt;span class=&quot;token string&quot;&gt;&apos;&amp;lt;p&gt;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;A Side: &apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; records&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;aside &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&amp;lt;br&gt;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;B Side: &apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; records&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bside &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&amp;lt;/p&gt;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
                &lt;span class=&quot;token string&quot;&gt;&apos;&amp;lt;button class=&quot;btn-more&quot;&gt;&amp;lt;span class=&quot;fas fa-angle-down&quot;&gt;&amp;lt;/span&gt;&amp;lt;/button&gt;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
                &lt;span class=&quot;token string&quot;&gt;&apos;&amp;lt;div class=&quot;info-sec&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
                &lt;span class=&quot;token string&quot;&gt;&apos;&amp;lt;h4&gt;Additional Information&amp;lt;/h4&gt;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
                &lt;span class=&quot;token string&quot;&gt;&apos;&amp;lt;/div&gt;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
            &lt;span class=&quot;token string&quot;&gt;&apos;&amp;lt;/div&gt;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;records&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;innerHTML &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; output&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
xhttp&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here is the fetch code:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token function&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;records.json&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;records&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;a&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; b&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; a&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;artist&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; y &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; b&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;artist&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; output &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;records&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        output &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; 
        &lt;span class=&quot;token string&quot;&gt;&apos;&amp;lt;div class=&quot;artist-song close&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
            &lt;span class=&quot;token string&quot;&gt;&apos;&amp;lt;h3 class=&quot;title&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;records&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;artist &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&amp;lt;/h3&gt;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
            &lt;span class=&quot;token string&quot;&gt;&apos;&amp;lt;p&gt;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;A Side: &apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;records&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;aside &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&amp;lt;br&gt;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;B Side: &apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;records&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bside &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&amp;lt;/p&gt;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
            &lt;span class=&quot;token string&quot;&gt;&apos;&amp;lt;button class=&quot;btn-more&quot;&gt;&amp;lt;span class=&quot;fas fa-angle-down&quot;&gt;&amp;lt;/span&gt;&amp;lt;/button&gt;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
            &lt;span class=&quot;token string&quot;&gt;&apos;&amp;lt;div class=&quot;info-sec&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
            &lt;span class=&quot;token string&quot;&gt;&apos;&amp;lt;h4&gt;Additional Information&amp;lt;/h4&gt;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
            &lt;span class=&quot;token string&quot;&gt;&apos;&amp;lt;/div&gt;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&apos;&amp;lt;/div&gt;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;records&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;innerHTML &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; output&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    error&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;innerText &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Error!&quot;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To me the fetch code looks more simple and easier to read. It probably will work fine for my little personal project.&lt;/p&gt;
&lt;p&gt;There may be some caveats though. I&apos;ve read that XHR is better at error handling. Fetch gets more complicated if you try to deal with errors. It seems that Fetch doesn&apos;t care whether your request succeeded. It only care about receiving a response from the server. Also, if you have to support Internet Explorer then you can&apos;t use Fetch. Personally, I don&apos;t support IE but at my job we do so I can&apos;t use it there. &lt;/p&gt;
&lt;p&gt;Here&apos;s a better explanation of this issue. If you see the Fetch code after all the error handling code added, it doesn&apos;t seem more simple than XHR.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/using-fetch/#article-header-id-6&quot;&gt;Using Fetch (CSS Tricks)&lt;/a&gt;&lt;/p&gt;</content:encoded><author>rebeccaeilering@gmail.com</author></item><item><title><![CDATA[Hidden Figures by Margot Lee Shetterly]]></title><description><![CDATA[I wasn't sure how I'd feel about a book that is about mathematicians. Doing math doesn't sound that interesting to me. Reading about math…]]></description><link>https://rebeccaeilering.github.io/my-dev-blog/hidden-figures-by-margot-lee-shetterly</link><guid isPermaLink="false">https://rebeccaeilering.github.io/my-dev-blog/hidden-figures-by-margot-lee-shetterly</guid><category><![CDATA[women]]></category><category><![CDATA[history]]></category><category><![CDATA[computers]]></category><category><![CDATA[technology]]></category><category><![CDATA[nasa]]></category><category><![CDATA[civil rights]]></category><category><![CDATA[cold war]]></category><category><![CDATA[space]]></category><pubDate>Mon, 01 Apr 2019 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I wasn&apos;t sure how I&apos;d feel about a book that is about mathematicians. Doing math doesn&apos;t sound that interesting to me. Reading about math seem even less interesting. However, it&apos;s not really about doing math. Yes, there is that math part but it intersects with civil rights, woman&apos;s rights, cold war politics, and the space race. This made it a bit more interesting to me because it put the work in context.&lt;/p&gt;
&lt;p&gt;This all takes place at the Langley Research center in Hampton, Virginia. At first, it was a research center for the NACA and later for NASA. NACA (National Advisory Committee for Aeronautics) was created to use engineering research and development to solve problems facing the the aircraft industry and the military air services when the era of flight was just in it&apos;s infancy. In 1958, the NACA evolved into NASA. Not only was the research facility being used to advance aircraft technology, it was used to get the United States into Space and, ultimately, to the Moon so we could stick it to those Communist Soviets. After all, the space race was ultimately an arm of the cold war. We had to prove that were were technologically more advanced and if the the Soviets were in space, we had to be too because it was seen as a national security issue (and important to our country&apos;s ego). &lt;/p&gt;
&lt;p&gt;It starts in a time with computers were not physical objects. They were people. They did complex math to assist the work engineers were doing. Basically, they were human scientific calculators. This was considered grunt level work. Because of this, it was a job that didn&apos;t pay as much as engineering. This kind of job was akin to secretarial work. Thus, it was a job more suitable for women. These people couldn&apos;t possibly be brilliant. Right?&lt;/p&gt;
&lt;p&gt;There wasn&apos;t just a few &quot;computers&quot;. There were whole teams of mostly women to do complex calculations. This was also at a time of racial segregation, and before women&apos;s liberation. They didn&apos;t just hire white women, but they hired black women too because the demand was so high for processing data due to World War II. However, the black women were segregated into separate wings and overall didn&apos;t get the same treatment as the white computers. &lt;/p&gt;
&lt;p&gt;The story centers mostly around three black women Katherine Johnson, Mary Jackson, and Dorothy Vaughan. These were women that had to overcome a lack of educational opportunities, discrimination due to being not only black but also being female. They also had to survive through technological advances where computers became more advanced and made calculating by hand obsolete. These woman became highly trusted and relied upon during the Mercury and Apollo space missions. They calculated launch windows, trajectories, plotted backup navigation charts, and later verifying numbers calculated by electronic computers. They did so with little fanfare from the public, but to the astronauts, the women doing these calculations and documentation were absolutely looked at in high regard. Their lives were in the hands of these women. These women worked for NASA into the Space Shuttle program and Johnson worked on plans for missions to Mars. &lt;/p&gt;
&lt;p&gt;These women were truly self-made women who fought tooth-and-nail for everything they earned. Katherine Johnson, despite showing strong mathematical abilities at a young age wasn&apos;t supposed to attend school past the eighth grade. This was because the county she grew up in West Virgina didn&apos;t offer public schooling to black children after that grade. Her parents fought for her to attend school that was on the campus of what is now West Virginia State University. She ended up graduating at 14 years old. She went on to a black college and graduated with high honors at 18. Despite those high honors, the only job she could get was teaching a black public schools. It seems to me anyone else with those credentials could get very high paying and respected engineering jobs. Mary Jackson had a similar background where she went to segregated schools, earned her college degree and started as a teacher but worked secretarial jobs too. She ended up being recruited by the NACA to work as a computer and later on she worked for an engineer in the Supersonic Pressure Tunnel. Then she worked as an engineer in several NASA divisions and eventually achieved the most senior title within the engineering department. Dorothy Vaughan, like Mary and Katherine graduated from college with a degree in Mathematics. She taught at a high school for 14 years. Her career at the NACA started during World War II calculating flight paths. She became head of the wing of black computers at the NACA. She continued working for Langley when it became part of NASA. She taught herself the FORTRAN programming language and taught it to her co-workers.&lt;/p&gt;
&lt;p&gt;Katherine Johnson earned the Presidential Medal of Freedom in 2015 and numerous accolades and co-authored numerous scientific papers. Mary Johnson earned numerous awards, authored and co-authored 12 technical papers and worked to help woman and minorities advance their careers.&lt;/p&gt;
&lt;p&gt;I thought what they did was inspiring and they have done so much to advance women and people of color in STEM fields. I, personally, am no mathematician and have no engineering aspirations but, as a person working in a technological field, appreciate their work and achievements. I think what impresses me the most is their determination and hard work despite the obstacles they faced. They also demonstrated the ability to evolve and change as technology advanced. I think, the fact they had a teaching background, they were prepared to be lifelong learners and this greatly helped them. &lt;/p&gt;
&lt;p&gt;I know people like Grace Hopper are highly revered but I have to think there are more stories out there of women who made important contributions to science and technology. I loved reading the story of these women that worked behind the scenes as, I think, the the people who do the most difficult, dirty, thankless work don&apos;t get very much attention. I&apos;d like to see more about these types of people. As much as we love to revere the innovators and those who come up with the great ideas, I want to hear about those who made those ideas happen. I want to hear about the people that work hard, with little fanfare, to make things happen. Maybe that&apos;s just because that&apos;s how I see myself. I&apos;m not an innovator. I&apos;m no Steve Jobs or Bill Gates or Grace Hopper. I&apos;m just one in a team of many that bring ideas to the public. All of us have a story and I&apos;d love to hear/read more of those. &lt;/p&gt;</content:encoded><author>rebeccaeilering@gmail.com</author></item><item><title><![CDATA[Motivation and Burning Out]]></title><description><![CDATA[I don't feel like working on personal projects or do any coding outside of work. I do this stuff all day at my full-time job. Right now I…]]></description><link>https://rebeccaeilering.github.io/my-dev-blog/motivation-and-burning-out</link><guid isPermaLink="false">https://rebeccaeilering.github.io/my-dev-blog/motivation-and-burning-out</guid><category><![CDATA[mental health]]></category><category><![CDATA[burn out]]></category><category><![CDATA[motivation]]></category><pubDate>Fri, 22 Mar 2019 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I don&apos;t feel like working on personal projects or do any coding outside of work. I do this stuff all day at my full-time job. Right now I don&apos;t feel motivated. In fact, I don&apos;t feel like doing much of anything. I just don&apos;t feel energetic.&lt;/p&gt;
&lt;p&gt;I don&apos;t feel this way all the time. Most of the time. I do want to work on projects outside of work. I want to learn and research on my time off. I find it satisfying and important.&lt;/p&gt;
&lt;p&gt;Then there&apos;s other times it&apos;s the last thing I want to do. It feels pointless and boring. I don&apos;t hate it but sometimes I just feel exhausted. This is usually because I&apos;m working on some projects at work that are challenging and I just feel like I need a break.&lt;/p&gt;
&lt;p&gt;I fight this lack of motivation by saying, &quot;I can&apos;t be lazy&quot;. I need to push through it. I beat up and batter myself over it. This is just my nature. I&apos;ve done this in other parts of my life: art and school. With art I did the same thing and would fight through it and just make make make. Never take a day off. Stay up late and get little sleep because I had to make or else I feel lazy or like I&apos;ll fail and get left behind. Don&apos;t get me wrong - it worked for a while. I did good in school. I made lots of art. I had shows and sold work. &lt;/p&gt;
&lt;p&gt;Over time, know what happened? I just grew to hate what I was doing and quit making all together. I barely make art these days and when I do try, I feel frustrated. I just don&apos;t want to make anything even if I&apos;m good at it. I don&apos;t get much enjoyment out of it right now. I can&apos;t seem to do it for fun because I made it into feeling like grunt-level work for so long. This is called burning out.&lt;/p&gt;
&lt;p&gt;When it comes to coding, I don&apos;t want to do that. I still have that devil on my shoulder saying, &quot;stop being a lazy bum&quot; and it makes me feel bad. It makes me feel like I&apos;m going to fail. I then generally feel worthless.&lt;/p&gt;
&lt;p&gt;Right now, this is how I feel. This past week and weekend, coding outside of work seems like a chore. Thinking about it makes me feel tired. I still have that devil bullying me telling me I&apos;m worthless if I don&apos;t work. The reality is, I just want to veg-out and watch YouTube or Netflix, read a little, or play games on my phone and nap. It&apos;s just my body and mind telling me I need rest but my neurotic side is saying, &quot;What if this rest turns into never wanting to code again? What if you never finish that project? You&apos;re just being lazy and you&apos;re resting on your laurels and if this keeps up you&apos;ll fall behind and lose your job and become a bum.&quot;.&lt;/p&gt;
&lt;p&gt;Lets be rational here. Catastrophizing this &quot;break&quot; into &quot;I&apos;ll never work again and will become a bum who ends up homeless and along&quot; doesn&apos;t do much good and is completely ridiculous. If I don&apos;t take breaks I&apos;m going to burn out. I need to let myself take breaks and not feel guilty. I need to listen to my body, if I don&apos;t feel like doing something, don&apos;t do it. Do something else for a while. I&apos;m not saying if I don&apos;t feel like going to work, or paying a bill, don&apos;t do it. There are some things I have to do in order to be a productive and responsible adult. However, I shouldn&apos;t feel obligated to be &quot;on&quot; 100% of the time. I need to stop being a dictator to myself. Take a break or else burn out. &lt;/p&gt;
&lt;p&gt;Let this blog post be the most work I will do today. Now stop. Go do something else.&lt;/p&gt;</content:encoded><author>rebeccaeilering@gmail.com</author></item><item><title><![CDATA[Moving Text from One Tag to Another]]></title><description><![CDATA[This was an issue I ran into when solving some accessibility issues. First of all, every page needs to have one h1 tag. Pages shouldn't have…]]></description><link>https://rebeccaeilering.github.io/my-dev-blog/moving-text-from-one-tag-to-another</link><guid isPermaLink="false">https://rebeccaeilering.github.io/my-dev-blog/moving-text-from-one-tag-to-another</guid><category><![CDATA[jquery]]></category><category><![CDATA[html]]></category><pubDate>Mon, 11 Mar 2019 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;This was an issue I ran into when solving some accessibility issues. First of all, every page needs to have one h1 tag. Pages shouldn&apos;t have multiple h1 tags. In addition, there shouldn&apos;t be any empty heading tags. I find many people sometimes use heading or paragraph tags to space out content and this shouldn&apos;t be done. That would be an issue to be best dealt with by using CSS.&lt;/p&gt;
&lt;p&gt;The first block of code is dealing with multiple h1 tags that are not hard coded. I couldn&apos;t just go into the content or html to delete. &lt;/p&gt;
&lt;p&gt;Basically this starts out by checking if the h1 tag exists inside the &lt;code class=&quot;language-text&quot;&gt;.page-detail&lt;/code&gt; div. If it does exist, we&apos;ll run the following code inside the conditional statement. Essentially the &lt;code class=&quot;language-text&quot;&gt;.text()&lt;/code&gt; method is pulling out the text inside the &lt;code class=&quot;language-text&quot;&gt;.page-detail h1 span&lt;/code&gt; and then we are storing it in a variable called &lt;code class=&quot;language-text&quot;&gt;eventHeading&lt;/code&gt;. Then we want to insert that text into the h1 tag that has the class of &lt;code class=&quot;language-text&quot;&gt;.section-title&lt;/code&gt;. We use the &lt;code class=&quot;language-text&quot;&gt;.html()&lt;/code&gt; method to pass in the &lt;code class=&quot;language-text&quot;&gt;eventHeading&lt;/code&gt; value. Finally, we want to remove the &lt;code class=&quot;language-text&quot;&gt;.page-detail h1&lt;/code&gt; from the DOM so there are no duplicate h1 tags. &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;   &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;.page-detail h1&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; eventHeading &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;.page-detail h1 span&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;.section-title&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;eventHeading&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;.page-detail h1&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The second block of code is dealing with a page that has an empty h1 tag that needs to be generated from a class on the body tag because I can&apos;t manually add it. This one was a little more difficult because this involved grabbing a class from the body and turning that into text that would be inserted into an h1 tag.&lt;/p&gt;
&lt;p&gt;This starts out by checking if the tag with the classes &lt;code class=&quot;language-text&quot;&gt;.subpage.events&lt;/code&gt; exists. If it does exist, the following code inside the conditional statement will be ran. What I want to do is grab the &lt;code class=&quot;language-text&quot;&gt;.events&lt;/code&gt; class (which is an attribute of the body tag), pull out the text and put it into an array. Since it&apos;s the second item, it has an index of 1. This is the purpose of &lt;code class=&quot;language-text&quot;&gt;.split(&amp;#39; &amp;#39;)[1]&lt;/code&gt;. This is stored in a variable called &lt;code class=&quot;language-text&quot;&gt;eventListTitle&lt;/code&gt;. Finally, this text is inserted into the h1 tag that has the class of &lt;code class=&quot;language-text&quot;&gt;.section-title&lt;/code&gt;. The &lt;code class=&quot;language-text&quot;&gt;.html()&lt;/code&gt; method is used to pass in the &lt;code class=&quot;language-text&quot;&gt;eventHeading&lt;/code&gt; value.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;.subpage.events&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; eventListTitle &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;body&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;class&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos; &apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;.section-title&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;eventListTitle&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These are not complicated blocks of code but they are certainly helpful if you can&apos;t modify the html for some reason. CSS would have been useful if I simply didn&apos;t want the elements to show without removing the HTML. instead, I needed to remove these completely from the DOM so that is where javascript became helpful.&lt;/p&gt;</content:encoded><author>rebeccaeilering@gmail.com</author></item><item><title><![CDATA[Quitting Facebook]]></title><description><![CDATA[After months of trying to decide if and how I wanted to leave Facebook, I finally pulled the plug last night.  I didn't even bother to…]]></description><link>https://rebeccaeilering.github.io/my-dev-blog/quitting-facebook</link><guid isPermaLink="false">https://rebeccaeilering.github.io/my-dev-blog/quitting-facebook</guid><category><![CDATA[facebook]]></category><pubDate>Wed, 06 Mar 2019 06:00:00 GMT</pubDate><content:encoded>&lt;p&gt;After months of trying to decide if and how I wanted to leave Facebook, I finally pulled the plug last night.  I didn&apos;t even bother to download my 10 years of data. I will add that you don&apos;t just quit Facebook when you click that button to delete the account. You get a grace period of about a month so I can come crawling back and reopen the account and not lose everything.&lt;/p&gt;
&lt;p&gt;I figured I would run into an issue with Spotify because my login was through Facebook. I decided to delete the Spotify account and start over. It&apos;s no big deal. I don&apos;t follow, don&apos;t have followers, and don&apos;t have playlists. I&apos;m a casual user that listens while I work. It feels good to have a clean slate now. Other than Spotify, I&apos;m curious about what else will break. Maybe nothing. It&apos;s possible I&apos;m fretting over nothing.&lt;/p&gt;
&lt;p&gt;One thing I didn&apos;t think about was I am supposed to meet with a friend in Peoria this weekend and we were communicating through Facebook. Whoops. However, this morning she texted me to make sure she still had my phone number. So that will work out fine.&lt;/p&gt;
&lt;p&gt;I&apos;ve been worried about quitting because there are still things I like about Facebook. I like the events and groups feature. However, I did it anyway and I&apos;ll have to figure out some alternatives.&lt;/p&gt;
&lt;h2 id=&quot;the-road-to-quitting&quot;&gt;&lt;a href=&quot;#the-road-to-quitting&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Road to Quitting&lt;/h2&gt;
&lt;p&gt;I can&apos;t say it was one thing that made me want to quit. I had sort of a love/hate and unhealthy relationship with the site. I liked to vent about problems I was having for a long time. For the most part, I gave that up. Firstly, I feel I have an unhealthy relationship with the site and probably default to scrolling through when bored. Secondly, many of the people I&apos;m &quot;friends&quot; are not really friends. My boyfriend is on it but I see him every day. Many are people I went to high school or college with. I honestly just don&apos;t communicate with them much these days. Some were fans of my art and photography but other than that I have no real connection to them. Some people I do like don&apos;t use Facebook anymore. All in all, I can think of maybe a handful of people I&apos;d like to stay in touch with. &lt;/p&gt;
&lt;p&gt;A big reason why I quit is I don&apos;t trust Facebook and I don&apos;t like them as a company. I think they are unethical and generally, I think social media is a cesspool of negativity, trolls, toxic politics, cons, fake news, and is a waste of my time. It&apos;s a monster that is out of control and I don&apos;t think it can be fixed. I don&apos;t think Facebook is about some idealistic idea of &quot;connecting people&quot;, &quot;connecting the world&quot; to make the world a better place. It&apos;s about collecting data and using me to generate money from advertisements. I have no idea how they are using my data or protecting my privacy because I don&apos;t trust them to be honest or do the right things. Every day it seems like there&apos;s a new scandal, a new lie, another data breach, more spying, defying rules, and stories of bad characters (individuals, companies, governments) weaponizing the platform to manipulate and cause chaos. &lt;/p&gt;
&lt;p&gt;In the end, I&apos;ve had enough.&lt;/p&gt;
&lt;h2 id=&quot;my-ten-years-on-facebook&quot;&gt;&lt;a href=&quot;#my-ten-years-on-facebook&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;My Ten Years on Facebook&lt;/h2&gt;
&lt;p&gt;I wasn&apos;t new to social media when I joined Facebook. I used Friendster and then dumped that for MySpace around 2004. I used MySpace until 2009. I also met my boyfriend through MySpace. I wasn&apos;t an early user of Facebook because I wasn&apos;t in college and until 2009 (I think), it was only open to those that were in school. I probably transitioned to Facebook as my friends were jumping to Facebook. I&apos;m sure for awhile I was using  MySpace and Facebook.&lt;/p&gt;
&lt;p&gt;My relationship with the platform was not always positive. I liked to argue and debate people on news sites. Mostly, those would just devolve into insults. Over time I realized it was pointless and stopped that. You never change anyone&apos;s minds in social media debates. My biggest issue is I like to vent about things a lot. During my early years on Facebook, my mom was battling cancer so I was at the hospital a lot. I was bored most of the time. The hospital had WIFI so I spent a lot of time on Facebook playing games like Farmville, crabbing about my life because I was miserable due to my mom&apos;s condition. I posted antagonistic things and responded to things that antagonized me a lot.&lt;/p&gt;
&lt;p&gt;There were some aspects of Facebook I thought would be helpful. I thought I&apos;d be more connected to my friends. I thought having a page for my art would be helpful. In short, it wasn&apos;t. Sure, I knew what my friends were doing all the time but it wasn&apos;t like I felt more connected to them. They were just there in the timeline and that was it. I felt no need to actually connect with them. The page wasn&apos;t that helpful for my art. Facebook made it difficult to reach people because they wanted you to pay for ads and such. I eventually gave up on that. I gave up on games too. Still, though, I&apos;ve wasted too much time on the platform. When I first joined, I didn&apos;t have a smartphone so I just used when I was at home on my laptop. Then in 2011, I bought a smartphone and then started using it more. When bored or during downtime, I&apos;d mindlessly go through my feed.&lt;/p&gt;
&lt;p&gt;2016 is when I started to really grow sour on the platform. It had to do with the election. It was constantly seeing people sharing questionable news stories pertaining to the presidential election. The views of some of my friends were starting to irritate and perplex me. It was pretty much downhill from there. Still though, no matter what, like an addiction, I would scroll through my feed when bored or during downtime.&lt;/p&gt;
&lt;h2 id=&quot;life-after-facebook&quot;&gt;&lt;a href=&quot;#life-after-facebook&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Life After Facebook&lt;/h2&gt;
&lt;p&gt;I don&apos;t know, life was fine before Facebook. Of my 41 years, I&apos;ve only used it for 10. I guess that&apos;s one-quarter of my life. That seems like a significant chunk of time, actually. I lived through my teens and twenties without it. I was fine. Life was fine. Facebook seemed to amplify my issues with anxiety and depression. It became a crutch for when I was bored. I don&apos;t think it made me more informed. I never got closer to my friends. Generally, it never made my life better.&lt;/p&gt;
&lt;p&gt;It did make finding events more convenient and I liked some of the developer groups I joined. I&apos;ll have to find alternatives. It will be fine though. I&apos;ll figure something out. &lt;/p&gt;
&lt;p&gt;It&apos;s time for something different.&lt;/p&gt;</content:encoded><author>rebeccaeilering@gmail.com</author></item><item><title><![CDATA[Alt Text Best Practices]]></title><description><![CDATA[Alt text values seems to be confusing for a lot of users. One method many use is to cover all bases is to add an alt text value to every…]]></description><link>https://rebeccaeilering.github.io/my-dev-blog/alt-text-best-practices</link><guid isPermaLink="false">https://rebeccaeilering.github.io/my-dev-blog/alt-text-best-practices</guid><category><![CDATA[html]]></category><category><![CDATA[alt attribute]]></category><category><![CDATA[images]]></category><category><![CDATA[web development]]></category><category><![CDATA[front end development]]></category><pubDate>Mon, 25 Feb 2019 06:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Alt text values seems to be confusing for a lot of users. One method many use is to cover all bases is to add an alt text value to every single image within an image tag. However, that isn&apos;t really the best way to deal with alt values. It can result in a lot of redundancy that can be annoying for those with screen readers. Even worse is to ignore the alt attribute all together. &lt;/p&gt;
&lt;p&gt;This is a good article that explains how to use the alt attribute: &lt;a href=&quot;https://support.siteimprove.com/hc/en-gb/articles/115000013031-Accessibility-Image-Alt-text-best-practices&quot;&gt;Accessibility: Image Alt Text Best Practices&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I don&apos;t was to rehash everything in the article. In short, the main thing is you need to determine if an image is decorative or if it contains information or text that is meaningful to the user. If an image is decorative, it doesn&apos;t need alt a text value but it still needs an empty alt attribute &lt;code class=&quot;language-text&quot;&gt;alt=&amp;quot;&amp;quot;&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;What is considered decorative? If an image doesn&apos;t add important contextual information or meaning, then it&apos;s decorative. If you can remove the image and not lose any information that would be important for users, then it&apos;s just there to make the page look better or more visually interesting. It&apos;s not informational or vital to the user.&lt;/p&gt;
&lt;p&gt;Here&apos;s an example of a decorative image:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;html&quot;&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;staff&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;img&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;img-john-smith.jpg&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;alt&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; // Just a photo of John Smith
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;John Smith&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Senior Web Developer&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;mailto:johnsmith@corpwebsites.com&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Email Me!&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the image of John Smith breaks for some reason, the user isn&apos;t going to miss out on important information. If we fill out the alt attribute with &quot;portrait of John Smith&quot;, that isn&apos;t going to help a person that has a disability that affects their sight. It&apos;s not important to know what he looks like. &lt;/p&gt;
&lt;p&gt;Here&apos;s an example of a image that is NOT decorative:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;html&quot;&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;staff&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;img&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;img-john-smith.jpg&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;alt&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; // A photo of John Smith with his name, title, and contact
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lets say this image has his name, title and email address in the image. This image contains information that is useful to the user. If this image breaks then a person that has a disability that affects their sight will not be able to know who that person is, what their title is or their contact info. An alt text value would he helpful here.&lt;/p&gt;
&lt;p&gt;Here&apos;s the same block of code that has an alt value:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;html&quot;&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;staff&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;img&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;img-john-smith.jpg&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;alt&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;John Smith, web developer. Email johnsmith@corpwebsites.com&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I want to note that ideally, you should avoid text in images but sometimes it&apos;s unavoidable. If your image includes text, it&apos;s a good idea to give the alt attribute a value.&lt;/p&gt;
&lt;p&gt;Here is something i didn&apos;t know. If the image has a function, such as it acts as a link, the alt text should convey the action rather than a description of the image. This is only the case if the image isn&apos;t accompanied by text within the anchor tag. If the image has visible anchor text, then the image still needs the alt attribute but it doesn&apos;t need to be filled in.&lt;/p&gt;
&lt;p&gt;Example without text:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;html&quot;&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;mailto:johnsmith@corpwebsites.com&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;img&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;email-john-smith.jpg&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;alt&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Email John Smith&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; // Photo of John Smith with an email icon
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Example with text:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;html&quot;&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;mailto:johnsmith@corpwebsites.com&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;img&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;email-john-smith.jpg&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;alt&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; // Photo of John Smith with an email icon
  Email John Smith
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When it comes to alt text, there isn&apos;t a &quot;one solution fits all&quot; approach other than all images need an alt attribute. However, evalulate the images added and determine if they need a text value or not. &lt;/p&gt;</content:encoded><author>rebeccaeilering@gmail.com</author></item><item><title><![CDATA[A Function Translated from jQuery to JavaScript]]></title><description><![CDATA[There has been a little personal project I've been working on for a couple years on and off. It's not that it's difficult to make. It's just…]]></description><link>https://rebeccaeilering.github.io/my-dev-blog/a-function-translated-from-j-query-to-java-script</link><guid isPermaLink="false">https://rebeccaeilering.github.io/my-dev-blog/a-function-translated-from-j-query-to-java-script</guid><category><![CDATA[jquery]]></category><category><![CDATA[javascript]]></category><category><![CDATA[web development]]></category><category><![CDATA[front end development]]></category><pubDate>Sat, 16 Feb 2019 06:00:00 GMT</pubDate><content:encoded>&lt;p&gt;There has been a little personal project I&apos;ve been working on for a couple years on and off. It&apos;s not that it&apos;s difficult to make. It&apos;s just difficult to find time and I need to do some data entry that I find boring so I just put it off. I just work on it when I can to add more data and improve it in little ways. &lt;/p&gt;
&lt;p&gt;The project is for me to have a way to inventory, filter by song or artist through the records I do own. I&apos;d like to have something like this so I can easily find out if I own a particular record. I have a lot and sometimes when shopping I see something I like but then wonder if I already own it or not. There have been several occasions where I have bought a record I already own and then end up with duplicates. This is a waste of money. There are also times when I don&apos;t buy and find out I didn&apos;t have it and missed out on the purchase.&lt;/p&gt;
&lt;p&gt;I also don&apos;t want to show every single record when the page loads. I just want to display 20 and then display 20 more when I click, &quot;view more&quot;. Mostly I&apos;m going to just use the filter fields and just display the items I&apos;m looking for.&lt;/p&gt;
&lt;p&gt;For the most part everything was in raw JavaScript but I had one function that was using jQuery because I couldn&apos;t figure it out in raw JavaScript. It was the displaying 20 more on button click. With jQuery it was a fairly simple task.&lt;/p&gt;
&lt;h2 id=&quot;here-is-the-function-in-jquery&quot;&gt;&lt;a href=&quot;#here-is-the-function-in-jquery&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Here is the function in jQuery&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;var songs = document.querySelectorAll(&amp;quot;.artist-song&amp;quot;);
var showMore = document.getElementById(&amp;quot;show-more&amp;quot;);

$(function () {
    $(&amp;#39;#show-more&amp;#39;).click(function() {
        $(&amp;#39;.artist-song:hidden&amp;#39;).slice(0, 19).show();
        if ($(&amp;#39;.artist-song&amp;#39;).length === $(&amp;#39;.artist-song:visible&amp;#39;).length) {
            $(&amp;#39;#show-more&amp;#39;).hide();
        }
    });
});&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Basically what is happening here is when the button with the &lt;code class=&quot;language-text&quot;&gt;#show-more&lt;/code&gt; id is clicked, a function will run. It will find the elements with the class &lt;code class=&quot;language-text&quot;&gt;.artist-song&lt;/code&gt; that are hidden. Then it will show the next 20 items. The conditional at the end is to hide the button with the &lt;code class=&quot;language-text&quot;&gt;#show-more&lt;/code&gt; id when all the elements with the &lt;code class=&quot;language-text&quot;&gt;.artist-song&lt;/code&gt; class are visible. The number visible elements are equal to the total number of elements. &lt;/p&gt;
&lt;p&gt;There&apos;s a little more here to unpack. jQuery abstracts a bunch what goes on &quot;under the hood&quot;. Here is what jQuery is doing.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The &lt;code class=&quot;language-text&quot;&gt;:hidden&lt;/code&gt; selector is a jQuery thing that is determines if an element is hidden by assuming an element is hidden if it doesn&apos;t take up any space. &lt;/li&gt;
&lt;li&gt;The slice() method in jQuery, behind the scenes, creates an empty array. Then it loops through the elements to find the &lt;code class=&quot;language-text&quot;&gt;.artist-songs&lt;/code&gt; that are hidden. Then it pushes those hidden elements into the empty array. &lt;/li&gt;
&lt;li&gt;The numbers inside &lt;code class=&quot;language-text&quot;&gt;slice(0,19)&lt;/code&gt; are selecting the first 20 elements (0 in the argument being the start position and 19 being the end position in the array) in that array. The &lt;code class=&quot;language-text&quot;&gt;show()&lt;/code&gt; method attaches style of &lt;code class=&quot;language-text&quot;&gt;display:block&lt;/code&gt; on to those elements.&lt;/li&gt;
&lt;li&gt;Every time the &lt;code class=&quot;language-text&quot;&gt;#show-more&lt;/code&gt; button is clicked, 1-3 will happen until the arguement in the conditional &lt;code class=&quot;language-text&quot;&gt;$(&amp;#39;.artist-song&amp;#39;).length === $(&amp;#39;.artist-song:visible&amp;#39;).length&lt;/code&gt; is true. Then the &lt;code class=&quot;language-text&quot;&gt;hide()&lt;/code&gt; method attaches a style 0f &lt;code class=&quot;language-text&quot;&gt;display:none&lt;/code&gt; to the &lt;code class=&quot;language-text&quot;&gt;#show-more&lt;/code&gt; button. This removes the button because there are no more elements to show.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;the-solution-in-raw-javascript&quot;&gt;&lt;a href=&quot;#the-solution-in-raw-javascript&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The solution in raw JavaScript&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;showMore.addEventListener(&amp;quot;click&amp;quot;, handleClick);

function handleClick() {
  var hiddenSongs = [];
  for (let i = 0; i &amp;lt; songs.length; i++) {
    if (songs[i].offsetWidth &amp;lt;= 0 &amp;amp;&amp;amp; songs[i].offsetHeight &amp;lt;= 0) {
      hiddenSongs.push(songs[i]);
    }
  }
  for (let i = 0; i &amp;lt; 20; i++) {
    if (hiddenSongs[i]) {
      hiddenSongs[i].style.display = &amp;quot;block&amp;quot;;
    } else {
      showMore.style.display = &amp;quot;none&amp;quot;;
      break;
    }
  }
  hiddenSongs.length = 0;
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The raw JavaScript is doing the same thing as the jQuery version but you see more of what is happening &quot;under the hood&quot;. Here is what is happening in the raw JavaScript.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Inside the &lt;code class=&quot;language-text&quot;&gt;handleClick()&lt;/code&gt; function, the first thing to do is create an empty array that is stored in a variable.&lt;/li&gt;
&lt;li&gt;Then loop through all the elements with the &lt;code class=&quot;language-text&quot;&gt;.artist-songs&lt;/code&gt; class. &lt;/li&gt;
&lt;li&gt;If the elements with the &lt;code class=&quot;language-text&quot;&gt;.artist-songs&lt;/code&gt; class are not visible they will be pushed into the hiddenSongs empty array. To determine which ones are not visible, a conditional with the argument &lt;code class=&quot;language-text&quot;&gt;songs[i].offsetWidth &amp;lt;= 0 &amp;amp;&amp;amp; songs[i].offsetHeight &amp;lt;= 0&lt;/code&gt; is created. Then the &lt;code class=&quot;language-text&quot;&gt;.push()&lt;/code&gt; method pushes the hidden elements into the empty array.&lt;/li&gt;
&lt;li&gt;Then run another loop through the hiddenSongs array and attach a style of &lt;code class=&quot;language-text&quot;&gt;display:block&lt;/code&gt; on to the first 20 elements. Once all the elemensts are visible a style 0f &lt;code class=&quot;language-text&quot;&gt;display:none&lt;/code&gt; to the &lt;code class=&quot;language-text&quot;&gt;#show-more&lt;/code&gt; button in order to hide it.&lt;/li&gt;
&lt;li&gt;Then exit the loop.&lt;/li&gt;
&lt;li&gt;Then empty the array&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;&lt;a href=&quot;#conclusion&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This was a very frustrating task for me but after getting some instruction from a user on &lt;a href=&quot;https://codepen.io/&quot;&gt;CodePen&lt;/a&gt;, I have a better understanding of how the jQuery works and how the JavaScript works too. Every since I started dabbling in web development the second time around (2005), most of my experiences with JavaScript have been through jQuery. It seems more and more, developers are favoring raw JavaScript today and then using that knowledge to get into popular frameworks.&lt;/p&gt;
&lt;p&gt;Here is the pen to illustrate. I want to note this isn&apos;t the full project code. This is an abbreviated version to show just enough to illustrate what the function I was having issues with does. &lt;/p&gt;
&lt;p class=&quot;codepen&quot; data-height=&quot;434&quot; data-theme-id=&quot;0&quot; data-default-tab=&quot;html,result&quot; data-user=&quot;rebeccaeilering&quot; data-slug-hash=&quot;bzorPb&quot; style=&quot;height: 434px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid black; margin: 1em 0; padding: 1em;&quot; data-pen-title=&quot;List of Records With Show More on Click&quot;&gt;
  &lt;span&gt;See the Pen &lt;a href=&quot;https://codepen.io/rebeccaeilering/pen/bzorPb/&quot;&gt;
  List of Records With Show More on Click&lt;/a&gt; by Rebecca Eilering (&lt;a href=&quot;https://codepen.io/rebeccaeilering&quot;&gt;@rebeccaeilering&lt;/a&gt;)
  on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/span&gt;
&lt;/p&gt;
&lt;script async src=&quot;https://static.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;</content:encoded><author>rebeccaeilering@gmail.com</author></item><item><title><![CDATA[Using a Data Attribute in Javascript to Edit a Pseudo-Element]]></title><description><![CDATA[I ran into an issue where I had to remove a style from some dynamically generated code. I couldn't remove a class from one item because I…]]></description><link>https://rebeccaeilering.github.io/my-dev-blog/using-a-data-attribute-in-javascript-to-edit-a-pseudo-element</link><guid isPermaLink="false">https://rebeccaeilering.github.io/my-dev-blog/using-a-data-attribute-in-javascript-to-edit-a-pseudo-element</guid><category><![CDATA[javascript]]></category><category><![CDATA[data attributes]]></category><category><![CDATA[pseudo element]]></category><category><![CDATA[web development]]></category><category><![CDATA[front end development]]></category><pubDate>Sat, 02 Feb 2019 06:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I ran into an issue where I had to remove a style from some dynamically generated code. I couldn&apos;t remove a class from one item because I didn&apos;t have access to change the generated HTML. I had six &lt;code class=&quot;language-text&quot;&gt;.photo&lt;/code&gt; elements. When the user clicks on that element, the click triggers a modal that contains a video embed URL from YouTube. The client only had four videos at the moment, so they wanted me to remove the play button graphic (that was styled with the psuedo-elemnent &lt;code class=&quot;language-text&quot;&gt;::before&lt;/code&gt; so it was overlaid the &lt;code class=&quot;language-text&quot;&gt;.photo&lt;/code&gt; element) and disable the modal for the two items that didn&apos;t have video embed URLs. &lt;/p&gt;
&lt;p&gt;This sounded like a job for some JavaScript. &lt;/p&gt;
&lt;p&gt;What all the &lt;code class=&quot;language-text&quot;&gt;.photo&lt;/code&gt; elements had in common was they had a data attribute that contained the embed URL for the video. All would have a different attribute value. The data attribute did have a default video in case there wasn&apos;t a video embed URL loaded but the client didn&apos;t want it to be used. However, I figured it would be of use to me. All the elements that didn&apos;t have a new video embed URL loaded would have the same data attribute value. So I figured that would be my target so I could alter the CSS and disable the modal.&lt;/p&gt;
&lt;p&gt;In addition, I wanted to add a &lt;code class=&quot;language-text&quot;&gt;display: none;&lt;/code&gt; style to the &lt;code class=&quot;language-text&quot;&gt;::before&lt;/code&gt; pseudo element. I decided to add a class to my css that would be appended to the &lt;code class=&quot;language-text&quot;&gt;.photo&lt;/code&gt; element. Then in the CSS, add another &lt;code class=&quot;language-text&quot;&gt;::before&lt;/code&gt; pseudo element to the new class. I don&apos;t know if that is the best way, but it works for what I want to do.&lt;/p&gt;
&lt;p&gt;The HTML and CSS looked started like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;html&quot;&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;photo&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;data-videourl&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://www.youtube.com/embed/8C5mhJq8UNs&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.photo::before&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;background-image&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token url&quot;&gt;url(&apos;file/path&apos;)&lt;/span&gt;no-repeat center&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 150px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 150px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The JavaScript was actually really simple. &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;  &lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;.photo[data-videourl=&quot;https://www.youtube.com/embed/8C5mhJq8UNs&quot;]&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;no-play&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;off&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For any &lt;code class=&quot;language-text&quot;&gt;.photo&lt;/code&gt; element that had the &lt;code class=&quot;language-text&quot;&gt;data-videourl&lt;/code&gt; attribute, a &lt;code class=&quot;language-text&quot;&gt;.no-play&lt;/code&gt; class that will have a &lt;code class=&quot;language-text&quot;&gt;::before&lt;/code&gt; pseudo-element with a &lt;code class=&quot;language-text&quot;&gt;display: none;&lt;/code&gt; style. This will override the &lt;code class=&quot;language-text&quot;&gt;::before&lt;/code&gt; pseudo-element attached to the &lt;code class=&quot;language-text&quot;&gt;.photo&lt;/code&gt; element. That&apos;s the cascade at work. That removed the play graphic overlay that was on &lt;code class=&quot;language-text&quot;&gt;.photo&lt;/code&gt; element.&lt;/p&gt;
&lt;p&gt;After the JavaScript runs, the HTML and CSS looks like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;html&quot;&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;photo no-play&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;data-videourl&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://www.youtube.com/embed/8C5mhJq8UNs&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.photo::before&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;background-image&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token url&quot;&gt;url(&apos;file/path&apos;)&lt;/span&gt;no-repeat center&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 150px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 150px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token selector&quot;&gt;.no-play&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; default&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;/* I wanted to remove the pointer because the element wouldn&apos;t be clickable */&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token selector&quot;&gt;.no-play::before&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; none&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The jQuery &lt;code class=&quot;language-text&quot;&gt;.off()&lt;/code&gt; method is then chained to the end to remove the click event handler that was being used to fire off the modal. Here&apos;s more info on that &lt;a href=&quot;http://api.jquery.com/off/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I learned a few things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;How to use data attribues in JavaScript&lt;/li&gt;
&lt;li&gt;How to deal with pseudo elements with JavaScript&lt;/li&gt;
&lt;li&gt;How to disable a click event&lt;/li&gt;
&lt;/ol&gt;</content:encoded><author>rebeccaeilering@gmail.com</author></item><item><title><![CDATA[Thoughts on Broad Band by Claire Evans]]></title><description><![CDATA[I listened to a podcast over a year ago that profiled this book. The author of the book talked about some of the themes and people profiled…]]></description><link>https://rebeccaeilering.github.io/my-dev-blog/thoughts-on-broad-band-by-claire-evans</link><guid isPermaLink="false">https://rebeccaeilering.github.io/my-dev-blog/thoughts-on-broad-band-by-claire-evans</guid><category><![CDATA[women]]></category><category><![CDATA[technology]]></category><category><![CDATA[history]]></category><category><![CDATA[internet]]></category><category><![CDATA[world wide web]]></category><category><![CDATA[computers]]></category><pubDate>Tue, 29 Jan 2019 06:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I listened to a podcast over a year ago that profiled this book. The author of the book talked about some of the themes and people profiled in the book. I&apos;d been wanting to read it ever since but I&apos;m lazy and just never got around to it. Maybe not just lazy but cheap too. Finally, I saw it at the library and I still didn&apos;t check it out. I already had 5 books I was checking out and I&apos;d just come back to it later.&lt;/p&gt;
&lt;p&gt;Later finally arrived. I checked it out a couple days before a snow storm hit. It&apos;s January and stuff like that happens. Perfect. It isn&apos;t like I&apos;m going to be leaving the house much so I was certain I could knock out this book in that time.&lt;/p&gt;
&lt;p&gt;I expected the chapters on Ada Lovelace and Grace Hopper. They&apos;ve received a lot of attention lately. I was familiar with Jaimie Levy because of the podcast. However, there was a lot of people and topics I wasn&apos;t familiar with. &lt;/p&gt;
&lt;p&gt;There is much to say when it comes to women in technology, more or less the lack of women in those fields. I see and hear stuff about that a lot. I&apos;ve read the ridiculous assertions that women just aren&apos;t interested, or are biologically not equipped to do high level programming, engineering, mathematics or web/software development. Frankly, it&apos;s all bullshit. Women are more than capable and can excel at a high level. I probably could have too if I didn&apos;t fall for the, &quot;I&apos;m not good at math&quot;, bull shit that I told myself once I became a teenager.&lt;/p&gt;
&lt;p&gt;Let me look back to my childhood. I&apos;m a woman and was once a little girl. Duh. I liked reading books on space exploration. I wanted to be an astronaut. I was interested in science and it was one of my favorite subjects. I was even good at math. I looked back to some report cards from elementary school and some of my best grades were in math. My dad liked technology and I played video games on the Atari and Intellivision. We had an Atari 400 that I played on. When my mom started taking college courses around 1986, she bought an Apple IIc. I played on that a lot too. We had a Print Shop and Paint programs and I loved those. I&apos;d print out stuff on the old dot-matrix printer. I&apos;d play games too. &lt;/p&gt;
&lt;p&gt;At the same time my mom was taking classes learning various computer softwares like Lotus and some banking software. She even took a basic computer programming class. She learned some BASIC too. &lt;/p&gt;
&lt;p&gt;Around 1993-94 we got a PC - some cheap 486. Maybe an Acer? I used that a lot for school. I played games like Where in the World is Carmen San Diego?, Myst, and others. I begged my mom to let me join AOL. She let me. I had to take the kitchen phone off the jack and I ran the cable from the bedroom into the kitchen. It would take forever to log in. I mostly just chatted and posted on discussion forums because trying to pull up a webpage took forever. My time was limited. However, eventually AOL was taken away from me after I started connecting through a long distance connection and a $200 phone bill was mailed to my mom. That was also around the time I got a job. I had to pay her back. That was probably 1995. After that, I didn&apos;t use the internet until my freshman year in college.&lt;/p&gt;
&lt;p&gt;It was also around that time I started telling myself I was bad at math, science and all that. I had always had an interest in art and I was going to pursue art and design. I don&apos;t know what got into me. I liked art but I think I also wanted to be cool and fit in and being a &quot;computer nerd&quot; wasn&apos;t cool. I kept my nerdiness under wraps. I pretended to be a jock and at the same time a bit artsy.&lt;/p&gt;
&lt;p&gt;Even when I started using the internet in college, I kept it under wraps. In between classes I liked to play on Usenet newsgroups, read my listserv messages, connect to BBSes. When I figured out how to create a website, I didn&apos;t tell anyone. I bought a book, wrote down my code at home, saved to a floppy and took it to school to copy/paste into the GeoCities editor. I figured out how to use Photoshop by scanning pictures from magazines. I ripped a lot off from print. I&apos;m sure there was something illegal about that. I kept a little blog that was all hard coded. Then all the sudden, I quit. I think it was because I thought it wasn&apos;t serious and I needed to get more serious about my studies. That was probably by summer of 1997.&lt;/p&gt;
&lt;p&gt;From there, I did no coding until I graduated with my MFA in 2005. I fiddled around a lot because a lot had changed. It took a while to catch up. 2011 was around he time I got serious about it again. &lt;/p&gt;
&lt;p&gt;Looking back, I was poised to work on websites. I could have started a career on the web in the mid-90s. I wrote it off though. I didn&apos;t know or see anyone doing this. I certainly didn&apos;t see women doing this. You couldn&apos;t major in web development. I could have majored in CIS or MIS but I didn&apos;t think I was cut out for it. Again, &quot;I wasn&apos;t good at math&quot;. It was for guys. What was I thinking?!&lt;/p&gt;
&lt;p&gt;I thought the book was really interesting and inspiring. I learned a lot. It also made me think about my place and what I can accomplish. &lt;/p&gt;
&lt;p&gt;I thought the stuff on hypertext was interesting because that certainly relates to the web today. However, hypertext has been around for a very long time - way before the world wide web. When Tim Berners-Lee used to to demonstrate what would become the world wide web, the programmers that were working with hypertext for a long time weren&apos;t impressed. People had been doing more complex and dynamic things with hypertext. They thought Berners-Lee&apos;s contribution was too simple. It just wasn&apos;t exciting. &lt;/p&gt;
&lt;p&gt;For example, Wendy Hall invented Microcosm hypermedia system in the late 1980s. This built on earlier work by Doug Engelbart and others. It was used as part of research at the University of South Hampton. What it did was keep links separated, in a database that was to be regularly updated and maintained. This database would be made up of documents and other multimedia. This was a &quot;linkbase&quot;. These links communicated with documents in that &quot;linkbase&quot;. If a new document was added the system would automatically identify words corresponding to links in the &quot;linkbase&quot; and update it accordingly. It was flexible. If you think about it, links on a website aren&apos;t that flexible. They break easily. You can only link to one thing with one link. &lt;/p&gt;
&lt;p&gt;There were things like Hypercard, made by Apple, in the 1980s that allowed users to connect documents (&quot;cards&quot;) that contained anything from text, images and other multimedia in a non-linear fashion but it didn&apos;t operate over the internet. I&apos;d describe them as web pages before the web. People like Jamie Levy created e-zines that would be passed around on floppy discs. Her work was much more &quot;punk&quot; and artsy than work by Wendy Hall, whose work was more academic. Eventually Levy would create e-zines on the web and was very creative and pushed many boundaries. It was very innovative from a design and UX perspective. &lt;/p&gt;
&lt;p&gt;Other figures that stuck out to me were Elizabeth “Jake” Feinler who was the director of the Network Information Systems Center at the Stanford Research Institute. Her group operated teh NIC for the ARPANET. The NIC provided a reference service to users of the ARPANET, maintained a directory of people (&quot;white pages&quot;), a resource handbook (&quot;yellow pages&quot;), and the protocol handbook. She was basically the Google of it&apos;s time. She was instrumental in creating Whois and the Domain Name System (DNS). Her group was the naming authority an also managed the name registries of the top-level domains. I&apos;m sure we&apos;re all familiar with those was these are essential to any website today. &lt;/p&gt;
&lt;p&gt;Another thing I love about many of these women is that most didn&apos;t come from a computer science or engineering background. Many came from all different backgrounds and were thrown into a situation that wasn&apos;t developed yet. There was no rule book or map. They just figured it out.&lt;/p&gt;
&lt;p&gt;Women have played a big part in creating the web of today. Many have been overshadowed by the superstars and their male colleagues but were no less important. No history of the internet and computing is complete without the contributions of women (or of people of color). Even today many women are doing important work in technology. Women always had a place and will always have a place.&lt;/p&gt;
&lt;p&gt;It&apos;s not a comprehensive history but it fills in some of the gaps in other history books and materials. If you are interested in learning more about the history of the internet, you should check out the book. &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.penguinrandomhouse.com/books/545427/broad-band-by-claire-l-evans/9780735211759/&quot;&gt;Buy Broad Band by Claire L. Evans&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Or go to Amazon but you can search that yourself.&lt;/p&gt;</content:encoded><author>rebeccaeilering@gmail.com</author></item><item><title><![CDATA[2019 Web Development Goals]]></title><description><![CDATA[I'm going to hold myself accountable and make some goals. I'm not going to just think of goals but to write them down and put them out there…]]></description><link>https://rebeccaeilering.github.io/my-dev-blog/2019-web-development-goals</link><guid isPermaLink="false">https://rebeccaeilering.github.io/my-dev-blog/2019-web-development-goals</guid><category><![CDATA[goals]]></category><category><![CDATA[motivation]]></category><pubDate>Thu, 10 Jan 2019 06:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I&apos;m going to hold myself accountable and make some goals. I&apos;m not going to just think of goals but to write them down and put them out there to be judged by the one person reading this. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;This isn&apos;t just a development goal but a general one, but I think it&apos;s a good one. I need to be more patient and kinder to myself. I&apos;m too hard on myself. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I&apos;m going to continue to work on JavaScript. This is going to happen if I&apos;m working since, I use it at my job. I&apos;m certainly not going to shy from it. I use jQuery at work but on my own personal projects I&apos;m using just plain vanilla JavaScript. This is going to be an ongoing project. On top of that, I want to continue to play with Gatsby and understand React more. I want to finish my test site which is a website for my cat. It&apos;s not a serious site at all but just a way to learn Gatsby. After that, I&apos;d like to create a test site using Vue. I&apos;m not sure how much frameworks are going to help me, but I think if I understand frameworks, in turn, I&apos;ll learn more JavaScript.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be more consistent with my personal projects. I tend to work in chunks. I may go a month or so neglecting projects. It&apos;s not that I&apos;m neglecting being a developer because I work as one for at least 40 hours a week and do a lot of different projects and solving problems. I&apos;d just like to average a few hours a week for working on personal projects and/or tutorials. I don&apos;t have to work on those projects daily. I just feel like when I don&apos;t work on something for a month or two and then come back, I feel like I lose momentum and forget what I was working on or forget how to do something. So, I spend too much time going over things I already did or redoing things I don&apos;t need to.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get rid of my old website that is at rebeccaeilering.com. I want to keep the domain but redirect it to my new site. I just don&apos;t want to use WordPress and keep the hosting account that I&apos;ve had since 2004 when it was on Yahoo. I can&apos;t even remember the company that has it now, but it&apos;s just outdated, and I don&apos;t like it. I don&apos;t even know why I chose Yahoo other than at that time I had an email account with them and I didn&apos;t know better. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Do one project in a new language. I&apos;m thinking C# (I build templates on the .Net framework at work) or something like Python because I don&apos;t do much &quot;programming&quot; and I hear it&apos;s a good language to learn first. Plus, it&apos;s popular.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content:encoded><author>rebeccaeilering@gmail.com</author></item><item><title><![CDATA[Resources I Like to Use for Developing Websites]]></title><description><![CDATA[In the world of web development there are many tools and services available for free. This is something I love about web development. All…]]></description><link>https://rebeccaeilering.github.io/my-dev-blog/resources-i-like-to-use-for-developing-websites</link><guid isPermaLink="false">https://rebeccaeilering.github.io/my-dev-blog/resources-i-like-to-use-for-developing-websites</guid><category><![CDATA[resources]]></category><category><![CDATA[tools]]></category><category><![CDATA[blogs]]></category><category><![CDATA[podcasts]]></category><category><![CDATA[youtube]]></category><category><![CDATA[learning]]></category><category><![CDATA[plugins]]></category><pubDate>Sat, 08 Dec 2018 06:00:00 GMT</pubDate><content:encoded>&lt;p&gt;In the world of web development there are many tools and services available for free. This is something I love about web development. All the tools and info you need is a Google (or DuckDuckGo) search away. &lt;/p&gt;
&lt;h2 id=&quot;free-stock-and-placeholder-images&quot;&gt;&lt;a href=&quot;#free-stock-and-placeholder-images&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Free Stock and Placeholder Images&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://unsplash.com/&quot;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.pexels.com/&quot;&gt;Pexels&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://placeholder.com/&quot;&gt;Placeholder.com&lt;/a&gt; - placeholder images&lt;/p&gt;
&lt;h2 id=&quot;jquery-plugins&quot;&gt;&lt;a href=&quot;#jquery-plugins&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;jQuery Plugins&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://jquery.malsup.com/cycle2/&quot;&gt;Cycle2&lt;/a&gt; - jquery slider plug in that&apos;s really simple to use and easy to customize&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://fancyapps.com/fancybox/3/&quot;&gt;FancyBox&lt;/a&gt; - a simple jQuery lightbox&lt;/p&gt;
&lt;h2 id=&quot;toolingdevops-stuff&quot;&gt;&lt;a href=&quot;#toolingdevops-stuff&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tooling/DevOps Stuff&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/&quot;&gt;Github&lt;/a&gt; - code repository/versioning and hosting with Github Pages. I store code snippets as gists too&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt; - hosting&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://gulpjs.com/&quot;&gt;Gulp&lt;/a&gt; - build tool&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;NPM&lt;/a&gt; - package manager&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.scootersoftware.com/download.php&quot;&gt;Beyond Compare&lt;/a&gt; - compare files to update content&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt; - code editor&lt;/p&gt;
&lt;h2 id=&quot;reference&quot;&gt;&lt;a href=&quot;#reference&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/&quot;&gt;MDN&lt;/a&gt; - documentation for HTML, CSS, Javascript&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://caniuse.com/&quot;&gt;Can I Use&lt;/a&gt; - referece for browser compatibility &lt;/p&gt;
&lt;h2 id=&quot;accessibility&quot;&gt;&lt;a href=&quot;#accessibility&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Accessibility&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://a11yproject.com/&quot;&gt;A11y Project&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;design-tools&quot;&gt;&lt;a href=&quot;#design-tools&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design Tools&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://fontawesome.com/&quot;&gt;FontAwesome&lt;/a&gt; - font icons&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.heropatterns.com/&quot;&gt;Hero Patterns&lt;/a&gt; - svg backgrounds library&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.webfx.com/web-design/hex-to-rgb/&quot;&gt;Hex to RGB converter&lt;/a&gt; - will convert a color hex value to rgb and vice-versa. Very simple and minimal interface.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://kraken.io/web-interface&quot;&gt;Krakin&lt;/a&gt; or &lt;a href=&quot;https://tinypng.com/&quot;&gt;tinyPNG&lt;/a&gt; - compress images&lt;/p&gt;
&lt;h2 id=&quot;blogs&quot;&gt;&lt;a href=&quot;#blogs&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blogs&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/&quot;&gt;CSS Tricks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://alistapart.com/&quot;&gt;A List Apart&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;fun&quot;&gt;&lt;a href=&quot;#fun&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fun&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://codepen.io/&quot;&gt;Codepen&lt;/a&gt; - inspiration, code examples, practice, experimentation and fun&lt;/p&gt;
&lt;h2 id=&quot;chrome-extensions&quot;&gt;&lt;a href=&quot;#chrome-extensions&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Chrome Extensions&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/html5-outliner/afoibpobokebhgfnknfndkgemglggomo&quot;&gt;HTML5 Outliner&lt;/a&gt;- generates a navigable page outline with heading and sectioning elements&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/grid-ruler/joadogiaiabhmggdifljlpkclnpfncmj&quot;&gt;Grid Ruler&lt;/a&gt; - inserts rulers and can use guides in the browser like you would in photoshop&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/lastpass-free-password-ma/hdokiejnpimakedhajhdlcegeplioahd&quot;&gt;LastPass&lt;/a&gt; - password manager&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/siteimprove-accessibility/efcfolpjihicnikpmhnmphjhhpiclljc&quot;&gt;Siteimprove&lt;/a&gt; - check accessibility in the browser &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/eye-dropper/hmdcmlfkchdmnmnmheododdhjedfccka&quot;&gt;Eye Dropper&lt;/a&gt; - grab colors from the browser&lt;/p&gt;
&lt;h2 id=&quot;vs-code-extensions&quot;&gt;&lt;a href=&quot;#vs-code-extensions&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;VS Code Extensions&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=HookyQR.beautify&quot;&gt;Beautify&lt;/a&gt; and/or &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode&quot;&gt;Prettier&lt;/a&gt; - clean up your code&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer&quot;&gt;Bracket Pair Colorizer&lt;/a&gt; - helps my old eyes see which brackets go together&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer&quot;&gt;Live Server&lt;/a&gt; - launch a developmemt local server with live reload. Great for static pages. &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=robertohuertasm.vscode-icons&quot;&gt;vscode-icons&lt;/a&gt; - helps me identify file types in my source tree easier &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=dbaeumer.jshint&quot;&gt;jshint&lt;/a&gt; - helps detect errors in javascript&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens&quot;&gt;GitLens&lt;/a&gt; - helps visualize code authorship and more&lt;/p&gt;
&lt;h2 id=&quot;podcasts&quot;&gt;&lt;a href=&quot;#podcasts&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Podcasts&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://syntax.fm/&quot;&gt;Syntax&lt;/a&gt; - Wes Bos and Scott Tolinski talk web development&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://shoptalkshow.com/&quot;&gt;Shop Talk Show&lt;/a&gt; - Chris Coyer and Dave Rupert talk web dev stuff&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.codenewbie.org/podcast&quot;&gt;CodeNewbie&lt;/a&gt; - interviews and tips for developers, especailly new ones&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://freecodecamp.libsyn.com/&quot;&gt;Free Code Camp Podcast&lt;/a&gt; - interviews and tips for developers, especailly new ones&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.codepen.io/radio/&quot;&gt;Codepen Radio&lt;/a&gt; - news about Codepen but sometimes have interesting interviews with developers that use the site and/or develop the site.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.fullstackradio.com/&quot;&gt;Full Stack Radio&lt;/a&gt; - news, interviews and talk about web technologies&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://thewebplatformpodcast.com/&quot;&gt;Web Platform Podcast&lt;/a&gt; - news, interviews and talk about web technologies&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://spec.fm/podcasts/toolsday&quot;&gt;Toolsday&lt;/a&gt; - about web tooling and technology&lt;/p&gt;
&lt;h2 id=&quot;youtube&quot;&gt;&lt;a href=&quot;#youtube&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Youtube&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/channel/UC29ju8bIPH5as8OGnQzwJyA&quot;&gt;Traversy Media&lt;/a&gt; - tutorials&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ&quot;&gt;Free Code Camp&lt;/a&gt; - tutorials and web dev info&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/user/KepowOb&quot;&gt;Kevin Powell&lt;/a&gt; - tutorials&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/user/LevelUpTuts&quot;&gt;LevelUp Tuts&lt;/a&gt; - tutorials&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/channel/UC7TizprGknbDalbHplROtag&quot;&gt;Layout Land&lt;/a&gt; - about web layout and css grid with Jen Simmons&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCtxCXg-UvSnTKPOzLH4wJaQ&quot;&gt;Coding Tech&lt;/a&gt; - videos from talks and conferences related to web development&lt;/p&gt;
&lt;h2 id=&quot;learning&quot;&gt;&lt;a href=&quot;#learning&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learning&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://wesbos.com/&quot;&gt;Wes Bos&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.leveluptutorials.com/&quot;&gt;LevelUp Tutorials&lt;/a&gt;&lt;/p&gt;</content:encoded><author>rebeccaeilering@gmail.com</author></item><item><title><![CDATA[Using Cookies in JavaScript]]></title><description><![CDATA[Let me preface this with I don't know a whole lot about browser cookies. I've only added cookies to JavaScript a couple times. However, I've…]]></description><link>https://rebeccaeilering.github.io/my-dev-blog/using-cookies-in-java-script</link><guid isPermaLink="false">https://rebeccaeilering.github.io/my-dev-blog/using-cookies-in-java-script</guid><category><![CDATA[cookies]]></category><category><![CDATA[javascript]]></category><category><![CDATA[plugins]]></category><category><![CDATA[web development]]></category><category><![CDATA[front end development]]></category><pubDate>Wed, 28 Nov 2018 06:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Let me preface this with I don&apos;t know a whole lot about browser cookies. I&apos;ve only added cookies to JavaScript a couple times. However, I&apos;ve found a solution that is simple to use if you still use jQuery.&lt;/p&gt;
&lt;p&gt;So far I have only used cookies a couple times. Mostly it&apos;s been for used with popups. The idea is the pop up only opens once per user each day so the person isn&apos;t constantly closing popups every single time they go to pages on the website. Once is enough. Then it resets after a day.&lt;/p&gt;
&lt;p&gt;I don&apos;t do this all the time so every single time I have to Google this and go though various Stack Overflow posts to figure this out. &lt;/p&gt;
&lt;p&gt;We use jQuery where I work and evertime I add a cookie I pull in a plugin called &lt;a href=&quot;https://github.com/js-cookie/js-cookie&quot;&gt;Javascript Cookie&lt;/a&gt;{:target=&quot;_blank&quot;}. I just use the CDN script to pull in the plugin after the jquery script.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;html&quot;&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To set the cookie all you do create a cookie is:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;Cookies&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;name&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;value&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To set with an expiration that is valid across the whole site you:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;Cookies&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;name&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;value&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; expires&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To read the cookie you:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;Cookies&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;name&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Of course it isn&apos;t that simple. Everyone&apos;s scripts are going to be different and everyone is going to use the script in a different way.&lt;/p&gt;
&lt;p&gt;In my case, I created a variable for my cookie. Then I would set up a conditional to see if a cookie has not been set. If a cookie has not been set and the user scrolls down the page more than 600px then I will set the cookie. Note I added another conditional inside the scroll conditional so if the user scrolls back up the pop up doesn&apos;t show again. &lt;/p&gt;
&lt;p&gt;So to set my cookie I did this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; popCookie &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Cookies&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;popupCookie&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// cookie variable&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;popCookie&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// determine if popCookie has been set. If it hasn&apos;t...&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;window&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;scroll&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; scroll &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;window&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;scrollTop&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;scroll &lt;span class=&quot;token operator&quot;&gt;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// scroll down more than 600px&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Cookies&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;popupCookie&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// determine if popCookie has been set. If it hasn&apos;t...&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;.overlay&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;active&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;.subscribe-modal&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;active&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        Cookies&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;popupCookie&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;expires&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// set the cookie and it will expire in 1 day&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So in order to deal with the cookie monster I just pull in a plugin and figure out how to use it in my code.&lt;/p&gt;</content:encoded><author>rebeccaeilering@gmail.com</author></item><item><title><![CDATA[Can't Think of Project Ideas?]]></title><description><![CDATA[I don't know what to tell you because I have a hard time thinking of personal projects. I think some common answers to the problem of not…]]></description><link>https://rebeccaeilering.github.io/my-dev-blog/cant-think-of-project-ideas</link><guid isPermaLink="false">https://rebeccaeilering.github.io/my-dev-blog/cant-think-of-project-ideas</guid><category><![CDATA[projects]]></category><category><![CDATA[web development]]></category><category><![CDATA[learning]]></category><pubDate>Fri, 23 Nov 2018 06:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I don&apos;t know what to tell you because I have a hard time thinking of personal projects. I think some common answers to the problem of not having a personal project is to think of a problem you have and think of a way programming or coding can help, or try to find an existing application or website and reverse engineer it. If you&apos;re a beginner some common projects are to make a personal website, different types of calculators, a todo app, a note app. Those are the ones off the top of my head. However, what if you&apos;ve done those? Now what? I suppose you have to get creative.&lt;/p&gt;
&lt;p&gt;How about just not have a personal project? Is it absolutely nessessary? Maybe. I suppose if you already have a job that keeps you busy with new projects and you work on those for 8+ hours a day it would be completely fine to not have a personal project. Maybe it&apos;s more important that you spend that outside time refreshing your mind and body. Spend time with family and friends and nurture relationships. Have a creative hobby. There&apos;s many options. &lt;/p&gt;
&lt;p&gt;However, lets say you&apos;re a beginner and you haven&apos;t landed a job. I&apos;d say it&apos;s important to do something to have working examples of your work in a portfolio. You need to learn beyond tutorials, reading, and watching videos. You need hands on experience and have to have a way to motivate and challenge yourself. Personal projects will be good for you.&lt;/p&gt;
&lt;p&gt;Here&apos;s another situation. This is possibly my situation. You&apos;re a junior level, meaning you have a job, but you&apos;re not really working on big projects. You&apos;re working on maintaining current sites and fixing issues and bugs that come in everyday. Sometimes the work is menial. You are learning a lot but you&apos;re working with a stack that is specific to your workplace and not really one that you want to work with personally. You listen to podcasts and read blogs about the newest technologies. You&apos;re curious. You&apos;ve done all those beginner level projects. &lt;/p&gt;
&lt;p&gt;Just spitballing. Here are some ideas. &lt;/p&gt;
&lt;h2 id=&quot;try-out-one-of-those-new-technologies-you-read-or-hear-about&quot;&gt;&lt;a href=&quot;#try-out-one-of-those-new-technologies-you-read-or-hear-about&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Try out one of those new technologies you read or hear about.&lt;/h2&gt;
&lt;p&gt;Case study: Over the weekend, I did the beginner Gatsby tutorials (insert link here). In the process I learned more about React, JavaScript, GraphQL. I learned how to deploy to Surge.sh. It took up a few hours of 3 days. I came out with a lame blog but, I built a blog platform! I never done that. Even what I&apos;m writing on isn&apos;t a blogging platform I made. It came with the basic starter theme in Jekyll. So in the end I don&apos;t have anything pretty or groundbreaking but I did learn something.&lt;/p&gt;
&lt;h2 id=&quot;think-of-a-problem-you-are-having-or-think-of-a-way-you-can-make-something-easier-to-do&quot;&gt;&lt;a href=&quot;#think-of-a-problem-you-are-having-or-think-of-a-way-you-can-make-something-easier-to-do&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Think of a problem you are having or think of a way you can make something easier to do.&lt;/h2&gt;
&lt;p&gt;Case study: My partner and I like to shop for records. We have hundreds of those little 7-inch singles (or 45s). One issue we run into is forgetting what we have in our collection. We&apos;ll be looking at an interesting find but then think that maybe we already have it. Most times if we&apos;re not sure we decide not to purchase the item. So I thought that I could put all the records we have into a JSON file and then import and display our collection in a little application/website. We could do a basic search/filter to see if we have the record or not. I got it working. I just need to get all those items in the JSON file. That&apos;s my only hinderance - the data entry. Pretty boring stuff. To procrastinate on that I added an accordion to each item where I could include more info. I can add a thumbnail of the cover, a link to a YouTube video of the song, add a link to the band website or Wikipedia page. One day, I&apos;ll finish this.&lt;/p&gt;
&lt;p&gt;Other thing you can make relating to this. Make a Chrome Extension to solve a browser related issue or just make something easier.&lt;/p&gt;
&lt;h2 id=&quot;contribute-to-an-open-source-project-on-github&quot;&gt;&lt;a href=&quot;#contribute-to-an-open-source-project-on-github&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribute to an open source project on Github.&lt;/h2&gt;
&lt;p&gt;Case study: I honestly haven&apos;t contributed to much to other projects. If you haven&apos;t contributed to open source, it may seem scary. However, there repositories dedicated to making your first pull requests (insert link) and beginner level projects that are open to newbies (insert link). I participated in October&apos;s Hacktoberfest (insert link) this year. I did six pull requests. I contributed some css styling, some JavaSript, added some graphics to a game, refactored some code and other odds and ends. All my pull requests were approved. With one I had to make some changes to deal with conflicts but I made it through and learned something! It was fun.&lt;/p&gt;
&lt;h2 id=&quot;think-of-something-frivolous-and-fun&quot;&gt;&lt;a href=&quot;#think-of-something-frivolous-and-fun&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Think of something frivolous and fun.&lt;/h2&gt;
&lt;p&gt;For example, parody sites, quizzes, quote/fact/image generators. Not everything has to be serious. You don&apos;t have to solve the world&apos;s problems.&lt;/p&gt;
&lt;p&gt;In the end, just make stuff. Anything. Ideally, challenge yourself. If you&apos;re scared to do something, give it a try. Either way, if you try and succeed or try and fail, you have learned something and you are growing.&lt;/p&gt;</content:encoded><author>rebeccaeilering@gmail.com</author></item><item><title><![CDATA[First Impressions of Gatsby]]></title><description><![CDATA[There's been a lot of talk about the static site generator called Gatsby. It is React based and powered with GraphQL. I supposed out of all…]]></description><link>https://rebeccaeilering.github.io/my-dev-blog/first-impressions-of-gatsby</link><guid isPermaLink="false">https://rebeccaeilering.github.io/my-dev-blog/first-impressions-of-gatsby</guid><category><![CDATA[javascript]]></category><category><![CDATA[static site generator]]></category><category><![CDATA[web development]]></category><category><![CDATA[gatsby]]></category><category><![CDATA[jekyll]]></category><category><![CDATA[react]]></category><pubDate>Sun, 18 Nov 2018 06:00:00 GMT</pubDate><content:encoded>&lt;p&gt;There&apos;s been a lot of talk about the static site generator called Gatsby. It is React based and powered with GraphQL. I supposed out of all the static site generators, Gatsby is the rock star. Static site generators are not foreign to me. This blog is built with Jekyll and for the most part I&apos;m happy with it. So in some ways they are similar but they are also very different.&lt;/p&gt;
&lt;p&gt;I went through the Gatsby tutorials to build a simple blog this weekend and this is what I think.&lt;/p&gt;
&lt;h2 id=&quot;how-are-they-similar&quot;&gt;&lt;a href=&quot;#how-are-they-similar&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How are they similar?&lt;/h2&gt;
&lt;p&gt;In general, Jekyll and Gatsby are similar on the surface. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If you are going to be blogging, and it seems like these platforms are popular for blogging, both employ the use of Markdown for writing posts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Both have built in servers that you may run for development so you can see your changes in the browser as it&apos;s being developed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Both have large and active communities and you can download starter themes and plugins that other developers have created.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Both are easy to deploy using services such as Netlify and Surge. You can deploy from the command line. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Both build the site as static files and can be deployed without a traditional server. Instead, it can be hosted on a CDN. That&apos;s where the term &quot;serverless&quot; comes in. That means front end oriented people like me don&apos;t have to mess around with server stuff. So less server management. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Both are considered JAM Stack type of sites. (JavaScript, API, Markdown = JAM)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I think static site generators are great for blogs, documentation and small personal websites.&lt;/p&gt;
&lt;h2 id=&quot;how-are-they-different&quot;&gt;&lt;a href=&quot;#how-are-they-different&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How are they different?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Both are great for blogging but Gatsby promotes themselves as a &quot;static Progressive Web App (PWA) generator&quot; too. This means there is code and data spitting. It will only load the critical CSS, HTML, data and Javascript when the site first loads. Then once loaded and assets, data, code will only be loaded as needed. This makes the sites very fast. Gatsby utilizes Service Workers out-of-the-box. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Gatsby uses Node.js as it&apos;s engine and then everything built with React (JavaScript) while Jekyll uses a Ruby engine and if you know traditional HTML, CSS and can figure out the Liquid Templating Language, you will have no issues. I&apos;d say Jekyll is a little easier to get into right away. I think there&apos;s more of a learning curve for Gatsby. To use Jekyll you do have to have Ruby installed on your machine.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I think Gatsby is the hot one right now because it uses React. I would desribe React as a framework that allows you to build websites and apps using reusable components. Pretty much everything in Gatsby is built with Javascript. Everything. Yes, you will use HTML and CSS but it will be used within JavaScript. If you&apos;ve never used React, this will seem weird, jarring and even completely off-putting. It breaks a lot of rules I was taught, such as mixing CSS in JavaScript and writing all your HTML inside JavaScript. It almost takes out the cascade of of CSS. I have been saying, &quot;WTF&quot; a lot. However, I think the point is to keep everything compartmentalized within the components so they may be used anywhere without breaking stuff. Basically the hope is that there will be fewer errors. Some people love this and some people hate this. I&apos;ll keep an open mind.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Gatsby utilizes GraphQL to utilize data and Jekyll gets data via YAML, JSON, and CSV files along with the Liquid Templating Language to access the data. I&apos;m not familiar with GraphQL at all so that&apos;s going to be a learning curve for me. It kind of reminds me of JSON in that everything is in curly brackets and is nested. It&apos;s really too early for me to say more or determine if I like it or not. For me Jekyll is easier because I&apos;m already familiar with JSON and YAML. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Gatsby&apos;s templating is done with JavaScript via React. For example, you create a component for a header and then you import the component with the React syntax. Jekyll&apos;s templating is more traditional. I would make an includes folder and create a header.html file and then pull into my default layout with the liquid syntax. Liquid sort of reminds me of PHP - which I&apos;m familiar with. Again, it&apos;s really too early for me to say more or determine if I like it or not. For me Jekyll is easier because it&apos;s method of templating is more familiar to me.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Gatsby seems more modern with it&apos;s use of Webpack, Babel, ES6 and 7, JSX right out of the box. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;While Jekyll and Gatsby offer starter themes and plugins, Gatsby has a component ecosystem too. Jekyll doesn&apos;t offer this because it isn&apos;t component based.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jekyll is super close to Github so it is super simple to deploy with Github Pages so you can have a website for free as easy as making a commit to your github repository for your project. I deployed this blog using Github pages. You don&apos;t have to push live using Github pages. Just like with React you may host it on a traditional server or you can use Netlify or Surge. I use Netlify for my personal website and I think it&apos;s super simple. Surge is easy too but I haven&apos;t used it as much.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Gatsby includes programmatic design as you can pull in design elements with npm and then use in the site. Gatsby offers native support for design systems and component libraries. You can export React components in to applications like Sketch. I think you can with Figma too. I&apos;m not sure about Adobe XD. &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;whats-my-conclusion&quot;&gt;&lt;a href=&quot;#whats-my-conclusion&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What&apos;s my conclusion?&lt;/h2&gt;
&lt;p&gt;I doubt I covered everything. Heck, I may have got some things wrong. I&apos;m new to this! Gatsby and React are very interesting and I want to continue to experiment and play with it. I think I need to improve my JavaScript skills more but I&apos;m sure I could create a simple blog or website using Gatsby now using one of the many themes available. I&apos;m certainly not going to give up on Jekyll. I find it easier to use for my needs. The biggest obstacle was getting familiar with Liquid but even that isn&apos;t too difficult. &lt;/p&gt;
&lt;p&gt;I will say this, with how hot JavaScript and React are, its not a bad idea to familiarize yourself with Gatsby and React. React seems to have legs. JavaScipt seems to be taking over everything. Hail our new overlords!&lt;/p&gt;
&lt;p&gt;If you are familiar with React and are more of a JavaScrip whiz, Gatsby may be the way to go. &lt;/p&gt;
&lt;p&gt;In the end, my conclusion is that one isn&apos;t better than the other universally. I think it depends on your skill set and your needs. Use what is best for you. &lt;/p&gt;</content:encoded><author>rebeccaeilering@gmail.com</author></item><item><title><![CDATA[Confusion When Merging Branches]]></title><description><![CDATA[This is honestly just a personal reminder for me. I always get confused when I need to merge branches. Every single time I have to do a…]]></description><link>https://rebeccaeilering.github.io/my-dev-blog/confusion-when-merging-branches</link><guid isPermaLink="false">https://rebeccaeilering.github.io/my-dev-blog/confusion-when-merging-branches</guid><category><![CDATA[web development]]></category><category><![CDATA[branching]]></category><pubDate>Sat, 03 Nov 2018 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;This is honestly just a personal reminder for me. I always get confused when I need to merge branches. Every single time I have to do a search to look it up. I can&apos;t remember which branch I need to be on when merging. I want to merge new branch with the original (my staging branch) so which branch do I do the merge from? The new branch or the original? I probably overthink this.&lt;/p&gt;
&lt;p&gt;To put it simply:&lt;/p&gt;
&lt;p&gt;{% raw %}&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;// on branch A (my staging branch)
// create new branch called new-stuff
$ git checkout -b new-stuff
// make changes, additions etc
$ git commit -m &amp;quot;made some changes&amp;quot;
// go merge new-stuff into A
$ git checkout A
$ git merge new-stuff&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;{% endraw %}&lt;/p&gt;
&lt;p&gt;I like this page for reference:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.atlassian.com/git/tutorials/using-branches/git-merge&quot;&gt;Git Merge Tutorial from Atlassian&lt;/a&gt;{:target=&quot;_blank&quot;}&lt;/p&gt;
&lt;p&gt;I think this Tutorial is easy to understand with good diagrams, step-by-step directions, and command line examples.&lt;/p&gt;</content:encoded><author>rebeccaeilering@gmail.com</author></item><item><title><![CDATA[Feeling Inferior as a Developer]]></title><description><![CDATA[Today I took the day off work. I'm writing this at a time where normally I'd be checking my help desk tickets, communicating with a client…]]></description><link>https://rebeccaeilering.github.io/my-dev-blog/feeling-inferior-as-a-developer</link><guid isPermaLink="false">https://rebeccaeilering.github.io/my-dev-blog/feeling-inferior-as-a-developer</guid><category><![CDATA[imposter syndrome]]></category><category><![CDATA[mental health]]></category><pubDate>Wed, 26 Sep 2018 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Today I took the day off work. I&apos;m writing this at a time where normally I&apos;d be checking my help desk tickets, communicating with a client, working on adding some code or content or fixing something that is broken. Those are the many things I could be doing right now but instead, I took the day off. My boyfriend and I decorated the house for Halloween, went out for lunch and did some shopping (for Halloween decorations).&lt;/p&gt;
&lt;p&gt;I&apos;ve been having a garbage week. I made some mistakes and I was beating myself up over it. Then everything after that didn&apos;t go as I wanted it to, It made me angry, upset and I even started to hate my co-workers. Basically, it went like this. I made this mistake. I&apos;m an idiot. I don&apos;t know anything. I don&apos;t know why I have this job. My coworkers probably think I&apos;m dumb. Then by the end of the day, I need help with something so I ask. When the person is trying to help me, I&apos;m getting snippy. I hate that this person doesn&apos;t seem to listen to me and is telling me I&apos;m wrong. I get angry and I storm out and sit outside for a while. I stew. I feel angry. I&apos;m crying. Gosh, this really snowballed into a heaping pile of drama.&lt;/p&gt;
&lt;p&gt;I go home angry and sad. I just want to quit my job and give up. I feel small. I feel inferior. I just lay on the couch for a couple hours in tears, go for a walk in the dark neighborhood and eat a chili dog. Unhealthy food to feed my unhealthy feelings. I have no one to talk to and all I can do is listen to the &quot;Negative Nancy&quot; in my head telling me how crappy I am at my job.&lt;/p&gt;
&lt;p&gt;I get up the next morning. I trudge into work. I immediately start crabbing about what&apos;s in my help desk queue. I&apos;m venting over tickets I can&apos;t finish or feel like I&apos;m not approaching correctly. I&apos;m whining. I&apos;m also avoiding some people. I&apos;m trying to isolate myself. I just want to be done and go home. &lt;/p&gt;
&lt;p&gt;So here I am. Mental health day. No work. Now, how does this help? I don&apos;t know. Maybe I&apos;m trying to hit the reset button and come in more positive tomorrow. Maybe I should bring up my frustrations to my boss. Maybe I need to be less hard on myself. I should stop saying &quot;maybe&quot; and just do it because, yes, I need to do those things. &lt;/p&gt;
&lt;p&gt;That all being said, I often feel inferior as a junior level developer. I feel like I can&apos;t speak up. I feel like I can&apos;t have ideas. I can&apos;t criticize or have opinions. I always have to be wrong. I have told myself to just be a sponge. Do what you&apos;re told. Keep your head down. Don&apos;t question. However, after a while, it&apos;s tiring. After a while, I feel like I&apos;m being disrespected and not taken seriously. I feel like I&apos;m being looked down upon. &lt;/p&gt;
&lt;p&gt;I&apos;m sure I&apos;m not the only one that has felt this way as a &quot;newbie&quot;. There&apos;s going to be those tough days that are failures. You have to remember there will be many more days where you do well. You solve problems. You make the client happy. You make the company money. You learn something. Overall, the good outweighs the bad. That&apos;s something you must remember. &lt;/p&gt;
&lt;p&gt;So ditch &quot;Negative Nancy&quot;. Tell her to go away. Learn some lessons and move forward. Just keep coding and growing and to hell with the people that don&apos;t believe in you or want to put you down. You&apos;ve already come far and you can go further. You&apos;re resilient and tougher than you think. &lt;/p&gt;</content:encoded><author>rebeccaeilering@gmail.com</author></item><item><title><![CDATA[My Troubles With JavaScript]]></title><description><![CDATA[JavaScript is very hard for me. I struggle with it. That is not to say I never use it. I do. I use it quite frequently. Honestly, I use…]]></description><link>https://rebeccaeilering.github.io/my-dev-blog/my-troubles-with-java-script</link><guid isPermaLink="false">https://rebeccaeilering.github.io/my-dev-blog/my-troubles-with-java-script</guid><category><![CDATA[jquery]]></category><category><![CDATA[struggles]]></category><category><![CDATA[web development]]></category><category><![CDATA[front end development]]></category><pubDate>Mon, 17 Sep 2018 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;JavaScript is very hard for me. I struggle with it. That is not to say I never use it. I do. I use it quite frequently. Honestly, I use jQuery more than I use plain JavaScript. I don&apos;t think jQuery is better or worse than regular JavaScript. I do use it a lot at my job so I try to use it for personal stuff too so I get more practice. It&apos;s just part of our builds and probably will be for awhile. &lt;/p&gt;
&lt;p&gt;I know frameworks are the rage. React, Vue, Angular. I&apos;m sure they are all great. I have played around with React and Vue but I don&apos;t use them for anything because I think I need to get a better footing with the fundamentals of JavaScript.&lt;/p&gt;
&lt;p&gt;I&apos;m not sure what my issue is. I know I don&apos;t have issues with simple things. Like this. This is pretty simple.&lt;/p&gt;
&lt;p&gt;We generate some content dynamically in our CMS and use placeholders so users can add content. So with this, I built some repeating code that would display logos in a slider. However, the user doesn&apos;t have a logo for every company that was to be featured. Some would just display as text. Unfortunately, if the user just leaves the logo content empty, in some browsers, there would be a broken image icon because the browser is trying to read {% raw %}{{logo}}{% endraw %} as the image source. Obviously that isn&apos;t what an image path would look like.&lt;/p&gt;
&lt;p&gt;{% raw %}&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;.sample img[src=&quot;{{logo}}&quot;]&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;{% endraw %}&lt;/p&gt;
&lt;p&gt;What I wanted to do was run a function to remove the image tag when there was an image src of {% raw %}{{logo}}{% endraw %}. That&apos;s pretty simple.&lt;/p&gt;
&lt;p&gt;Another really simple thing I did was write a little script to remove an anchor tag that has an image tag inside. However, I didn&apos;t want to remove the image tag. Again, I have to do this because this is dynamic content being pulled into some repeating code. The client was using a template for many pages to display staff members. One page she didn&apos;t want the images to link but was using the same template. I didn&apos;t think they&apos;s appreciate me telling them to delete that content so I could create a new template. Then they could re-enter the content again.&lt;/p&gt;
&lt;p&gt;Instead I wrote another simple script to take care of this.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;.sample a:has(img)&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;replaceWith&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; 
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Basically, I targeted the content inside of a div with a specific class. Inside that class the script looks for an anchor tag with an img tag inside. Then it removes the anchor tag and replaces it with the img but without the anchor. &lt;/p&gt;
&lt;p&gt;These were some very simple bits of JavaScript (jQuery) that helped me out of some jams. They are small victories while I struggle with more complex/advanced things. Maybe I shouldn&apos;t have called this Troubles with JavaScript. I should have called this Small Victories with JavaScript. &lt;/p&gt;</content:encoded><author>rebeccaeilering@gmail.com</author></item><item><title><![CDATA[My First Year As A Web Developer]]></title><description><![CDATA[A year ago today I started working as an associate web developer. Overall, it's been a good year. It's also been a year full of big…]]></description><link>https://rebeccaeilering.github.io/my-dev-blog/my-first-year-as-a-web-developer</link><guid isPermaLink="false">https://rebeccaeilering.github.io/my-dev-blog/my-first-year-as-a-web-developer</guid><category><![CDATA[web development]]></category><category><![CDATA[self assessment]]></category><category><![CDATA[career]]></category><pubDate>Tue, 11 Sep 2018 05:00:00 GMT</pubDate><content:encoded>&lt;p&gt;A year ago today I started working as an associate web developer. Overall, it&apos;s been a good year. It&apos;s also been a year full of big challenges and changes that included moving to a new city. I&apos;ve learned a ton. Sometimes I feel confident. Other times I don&apos;t.&lt;/p&gt;
&lt;p&gt;In the year that I have worked as a developer, what have I learned? &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I know more than I think I do.&lt;/li&gt;
&lt;li&gt;I don&apos;t know that much.&lt;/li&gt;
&lt;li&gt;Ask questions.&lt;/li&gt;
&lt;li&gt;Seek help if you&apos;re stuck. Don&apos;t dwell on an issue for hours. &lt;/li&gt;
&lt;li&gt;I can fix little issues in C# and VB. I can&apos;t do anything too complicated but there are somethings I can figure out just by looking at the code.&lt;/li&gt;
&lt;li&gt;When estimating, go with the higher number.&lt;/li&gt;
&lt;li&gt;Take breaks. Get up every-so-often. Take your full lunch break and go for a walk after eating. It&apos;s a good way to reset for the second half of the day. It&apos;s also handy when you get frustrated and angry. It&apos;s better than crying in your cube.&lt;/li&gt;
&lt;li&gt;Make lists. Yeah, we have project management apps, help desk apps. However I find writing and prioritizing my tasks for the day helps keep me focused. Plus I feel like I&apos;m actually accomplishing something when I cross off items.&lt;/li&gt;
&lt;li&gt;Call the client if messaging and emails don&apos;t get their attention.&lt;/li&gt;
&lt;li&gt;I&apos;m better at JavaScript than I used to be. I still suck at it though.&lt;/li&gt;
&lt;li&gt;I love HTML/CSS. &lt;/li&gt;
&lt;li&gt;The importance of accessibility and semantic code.&lt;/li&gt;
&lt;li&gt;Drink lots of water. Stay hydrated and you&apos;ll have to use the restroom at some point so it will force you to get up.&lt;/li&gt;
&lt;li&gt;Wear headphones even if you aren&apos;t listening to anything.&lt;/li&gt;
&lt;li&gt;Getting to work 20-30 min early gives me time to warm up. I like to read articles on front-end development or look at CodePen.&lt;/li&gt;
&lt;li&gt;Living close to where you work rocks. I can ride my bike and it&apos;s saving me lots of money.&lt;/li&gt;
&lt;li&gt;I&apos;m terrible at golf.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now that I have worked a full year as a developer, what do I hope to accomplish in the next year?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;More site construction projects. I built a few sites this year but mostly just did tons fo support and small projects.&lt;/li&gt;
&lt;li&gt;I want to get more skilled with JavaScript. I don&apos;t expect expert level but I certainly want to tackle more.&lt;/li&gt;
&lt;li&gt;I did great on my billable hours and I want to keep that up and get more!&lt;/li&gt;
&lt;li&gt;I want to not get so frustrated when I can&apos;t figure out a complex problem easily. I need to be more patient with myself.&lt;/li&gt;
&lt;li&gt;Ask more questions.&lt;/li&gt;
&lt;li&gt;Learn more because I&apos;m never going to know everything.&lt;/li&gt;
&lt;li&gt;Realize when things go wrong it&apos;s not always my fault.&lt;/li&gt;
&lt;/ul&gt;</content:encoded><author>rebeccaeilering@gmail.com</author></item><item><title><![CDATA[The Basics of HTML5 Semanitic Elements]]></title><description><![CDATA[A long time ago it was pretty standard to create layouts with tables. Then we moved on to using divs to create layouts. This was certainly…]]></description><link>https://rebeccaeilering.github.io/my-dev-blog/the-basics-of-html-5-semanitic-elements</link><guid isPermaLink="false">https://rebeccaeilering.github.io/my-dev-blog/the-basics-of-html-5-semanitic-elements</guid><category><![CDATA[html]]></category><category><![CDATA[front-end development]]></category><pubDate>Sat, 30 Dec 2017 06:00:00 GMT</pubDate><content:encoded>&lt;p&gt;A long time ago it was pretty standard to create layouts with tables. Then we moved on to using divs to create layouts. This was certainly better than tables but no consideration was given to accessibility. However, today, accessibility is very important to create websites that will be accessible by all. This means making it so a website allows assistive technologies to read your site and adapt it so those with a variety of disabilities can access the content of a website.&lt;/p&gt;
&lt;p&gt;You can still create website layouts with nothing but div tags (I don&apos;t recommend it). You could make the div layouts more friendly to screen readers and other assistive technologies by using role attributes to create landmarks that are used by assistive technologies. You may still do that but using semantic sectioning elements such as &lt;code class=&quot;language-text&quot;&gt;&amp;lt;main&amp;gt;&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;&amp;lt;header&amp;gt;&lt;/code&gt;,&lt;code class=&quot;language-text&quot;&gt;&amp;lt;nav&amp;gt;&lt;/code&gt;,&lt;code class=&quot;language-text&quot;&gt;&amp;lt;footer&amp;gt;&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;&amp;lt;section&amp;gt;&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;&amp;lt;article&amp;gt;&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;&amp;lt;aside&amp;gt;&lt;/code&gt; to organize your content is a better option. &lt;/p&gt;
&lt;p&gt;Why is it better? First as a developer, it is easier to read. Instead of a sea of nested div tags that don&apos;t have any meaning, you have names for tags that have a clear meaning. When scanning code it sure is easier finding a footer tag than it is to find a div tag with a class or id with the name &quot;footer&quot;. Secondly, some of the semantic sectioning elements behave like landmark roles. Landmark roles help assisstive technologies identify and navigate to sections of an HTML document. In the end by using semantic sectioning elements you use less code to do the same thing. For example, &lt;code class=&quot;language-text&quot;&gt;&amp;lt;main&amp;gt;...&amp;lt;/main&amp;gt;&lt;/code&gt; vs &lt;code class=&quot;language-text&quot;&gt;&amp;lt;div role=&amp;quot;main&amp;quot;&amp;gt;...&amp;lt;/div&amp;gt;&lt;/code&gt;. However, in some cases you may have to do something like this &lt;code class=&quot;language-text&quot;&gt;&amp;lt;main role=&amp;quot;main&amp;quot;&amp;gt;...&amp;lt;/main&amp;gt;&lt;/code&gt; if you support legacy browsers like Internet Explorer.&lt;/p&gt;
&lt;p&gt;So what do the following do?&lt;/p&gt;
&lt;h2 id=&quot;main&quot;&gt;&lt;a href=&quot;#main&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Main&lt;/h2&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;&amp;lt;main&amp;gt;&lt;/code&gt; element is where the dominant content of the document&apos;s body lives. Then content should be unique to the document. Repeated content such as navigations, sidebars, etc,... shouldn&apos;t be in the main tag. You shouldn&apos;t have more than one main tag. The main element is a landmark.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main&quot;&gt;Learn more about the Main tag&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;header&quot;&gt;&lt;a href=&quot;#header&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Header&lt;/h2&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;&amp;lt;header&amp;gt;&lt;/code&gt; element is for introductory content or navigation aids. Many times this will contain heading text, logo, search. This doesn&apos;t go inside the main tag but it can be used in a section or article tag. Headers when not nested in other elements do act as landmarks.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/header&quot;&gt;Learn more about the Header tag&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;nav&quot;&gt;&lt;a href=&quot;#nav&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nav&lt;/h2&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; element is a section of a page that provides a block of navigation links. A document may have more than one of these elements but for accessibility purposes an &lt;code class=&quot;language-text&quot;&gt;aria-labeledby&lt;/code&gt; attribute may be used to help differentiate different nav elements when assitive technologies are used.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nav&quot;&gt;Learn more about the Nav tag&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;section&quot;&gt;&lt;a href=&quot;#section&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Section&lt;/h2&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;&amp;lt;section&amp;gt;&lt;/code&gt; element is great for content that is part of (a section of) a larger block of content. Typically if you use a section, you&apos;ll have more than one section. Many mistakenly use this element as a generic container - like a &lt;code class=&quot;language-text&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt;. A section should be used if the content should logically appear in the outline of the HTML document. Sections should have a heading as a child element. Sections may contain &lt;code class=&quot;language-text&quot;&gt;&amp;lt;header&amp;gt;&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;&amp;lt;footer&amp;gt;&lt;/code&gt; tags but it&apos;s not nessessary.&lt;/p&gt;
&lt;p&gt;A section is not a landmark but it becomes one when a heading is used along with an &lt;code class=&quot;language-text&quot;&gt;aria-label&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;aria-labelledby&lt;/code&gt;, or &lt;code class=&quot;language-text&quot;&gt;title&lt;/code&gt; attribute.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section&quot;&gt;Learn more about the Section tag&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;article&quot;&gt;&lt;a href=&quot;#article&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Article&lt;/h2&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;&amp;lt;article&amp;gt;&lt;/code&gt; element is often confused with the &lt;code class=&quot;language-text&quot;&gt;&amp;lt;section&amp;gt;&lt;/code&gt; element. The &lt;code class=&quot;language-text&quot;&gt;&amp;lt;article&amp;gt;&lt;/code&gt; element is a self-contained composition in a document that may be reusable/repeatable. Many times this is used for blog posts or news articles. How I usually think of it is that an article can be independent and taken outside the context of the page and still make sense.&lt;/p&gt;
&lt;p&gt;Sections and articles may be nested inside an article. Header and footer tags can be used inside of articles too. In addtion, articles should have a heading as a child element.&lt;/p&gt;
&lt;p&gt;Articles are not landmarks and should be within a landmark. Commonly this would be within the main element. &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article&quot;&gt;Learn more about the Article tag&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;aside&quot;&gt;&lt;a href=&quot;#aside&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Aside&lt;/h2&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;&amp;lt;aside&amp;gt;&lt;/code&gt; element is often confusing too. It&apos;s not another term for sidebar but many times it is used for a sidebar. It&apos;s often used as call-outs too. This landmark contains content that is indirectly related to the documents main content. If the content is not in any way related to the main content a &lt;code class=&quot;language-text&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element may be more appropriate.&lt;/p&gt;
&lt;p&gt;An Aside can have an header and footer but can&apos;t contain another aside element.&lt;/p&gt;
&lt;p&gt;Before HTML5, &lt;code class=&quot;language-text&quot;&gt;&amp;lt;aside&amp;gt;&lt;/code&gt; would be written like &lt;code class=&quot;language-text&quot;&gt;&amp;lt;div role=&amp;quot;complimentary&amp;quot;&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/aside&quot;&gt;Learn more about the Aside tag&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;footer&quot;&gt;&lt;a href=&quot;#footer&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Footer&lt;/h2&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;&amp;lt;footer&amp;gt;&lt;/code&gt; element is commonly at the bottom of a page ouside of the main content. This will typically contain copyright info, social media links, author/company information. This may also be used in other sectioning elements like articles to include author info or other meta data.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/footer&quot;&gt;Learn more about the Footer tag&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;concluding-thoughts&quot;&gt;&lt;a href=&quot;#concluding-thoughts&quot; aria-hidden class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Concluding Thoughts&lt;/h2&gt;
&lt;p&gt;This can be very confusing as there is a lot going on here and a lot of it is contextual. Much of this requires some judgement calls and is why HTML, while simple at the surface, turns more complicated when you need to make a semantic document that is accessible. &lt;/p&gt;
&lt;p&gt;I want to add that everything above is simplified and there&apos;s more to those elements than I explain. This is why I&apos;m including a link to the MDN documents that will provide additional information. I am no authority or expert at this as I am still learning the complexities. I still get things wrong.&lt;/p&gt;</content:encoded><author>rebeccaeilering@gmail.com</author></item><item><title><![CDATA[I'm An Imposter]]></title><description><![CDATA[I'm not a developer. I have told myself this a million times. I think if you read the My Dev Journey post, that could give some guidance to…]]></description><link>https://rebeccaeilering.github.io/my-dev-blog/im-an-imposter</link><guid isPermaLink="false">https://rebeccaeilering.github.io/my-dev-blog/im-an-imposter</guid><category><![CDATA[web development]]></category><category><![CDATA[imposter syndrome]]></category><category><![CDATA[mental health]]></category><pubDate>Sat, 30 Dec 2017 06:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I&apos;m not a developer. I have told myself this a million times. I think if you read the My Dev Journey post, that could give some guidance to why I may feel that way. I didn&apos;t go into being a developer by the normal and traditional route. I&apos;m self taught and that give me doubts that I&apos;m doing things the &quot;right way&quot;. I often feel like I don&apos;t know as much as others. I&apos;m sure that is true but I&apos;m sure I also know more than some other people too.&lt;/p&gt;
&lt;p&gt;A fear I have a lot is talking to other developers. I&apos;m fearful of seeming like a noob, or claiming to know stuff I don&apos;t. I may say that I&apos;m a developer but am I a &quot;real&quot; developer? I can admit that sometimes I&apos;m scared of asking questions or scared of being wrong or not being able to solve a problem at work and being judged by others as &quot;She doesn&apos;t know what she&apos;s doing. What an idiot.&quot; or wonder, &quot;How on Earth did you get this job?&quot;. &lt;/p&gt;
&lt;p&gt;The truth will come out. I&apos;m stupid and don&apos;t know how to code. I somehow tricked everyone that interviewed me. I deviously said the right things and manipulated them. Maybe I&apos;m an affirmative action hire to provide more diversity. Either way, at the core is that &quot;I don&apos;t deserve what I have&quot;.&lt;/p&gt;
&lt;p&gt;That is bullshit. &lt;/p&gt;
&lt;p&gt;Still the thought creeps back into my head, &quot;or maybe there is some truth to it and I don&apos;t know anything and I was a diversity hire and they put up with me despite being an idiot&quot;. In the end I just have to ignore those creeping thoughts and just do my job and not worry about it cause worrying about it doesn&apos;t help in any way.&lt;/p&gt;
&lt;p&gt;The truth is that I can&apos;t control how anyone else thinks and if they do think negative of me then &quot;screw them&quot;. All I can do is do my best and continue to learn. I will make mistakes. Those judging me will make mistakes too. Everyone makes errors.&lt;/p&gt;
&lt;p&gt;Things to remember:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I can&apos;t control how others feel. I can only control how I feel and how they feel is not my problem.&lt;/li&gt;
&lt;li&gt;I can just work on doing my best. Don&apos;t be lazy. Take pride in your work.&lt;/li&gt;
&lt;li&gt;You don&apos;t know everything and that is ok. Be open. Take criticism. Learn.&lt;/li&gt;
&lt;li&gt;Accept and acknowledge mistakes. It&apos;s ok to fail.&lt;/li&gt;
&lt;li&gt;Take notice and try to remember successes no matter how small they may seem.&lt;/li&gt;
&lt;li&gt;Baby steps are ok. As long as you work on the skill and practice, you will get better.&lt;/li&gt;
&lt;li&gt;If you didn&apos;t take a traditional route to being a developer, it doesn&apos;t mean you&apos;re less valuable. In a way you bring something else to the table they may not. You may see problems and solutions others may not see. Life experiences outside of programming/development/code do count and should count.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In the end. Yes, I am a developer.&lt;/p&gt;</content:encoded><author>rebeccaeilering@gmail.com</author></item><item><title><![CDATA[My Developer Journey]]></title><description><![CDATA[Sometimes I feel like I should be much further along in my career. I am 40 years old but I'm at an entry level. I think that would tell you…]]></description><link>https://rebeccaeilering.github.io/my-dev-blog/my-developer-journey</link><guid isPermaLink="false">https://rebeccaeilering.github.io/my-dev-blog/my-developer-journey</guid><category><![CDATA[web development]]></category><pubDate>Fri, 29 Dec 2017 06:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Sometimes I feel like I should be much further along in my career. I am 40 years old but I&apos;m at an entry level. I think that would tell you that I got started in this rather late.&lt;/p&gt;
&lt;p&gt;That&apos;s true but that&apos;s not the full story. My coding journey has not been a linear path. It&apos;s been a path of starts and stops and detours. The fact is, I created my first website in the mid-1990s. I had a little personal website on GeoCities that I would play around with when I was a freshman in college. This was around 1996-1997. The web was very crude and simple compared to today. There was some simple styling but no CSS. As far as design goes, there wasn&apos;t much. Most websites were text and limited to very simple layouts (done with tables) and colors. Images didn&apos;t look very good and you used them sparingly because connections were very slow. It seemed like a fun thing to do but I didn&apos;t see much potential for a career. Instead, I was going to go into Graphic Design.&lt;/p&gt;
&lt;p&gt;In the end, I didn&apos;t even go into Graphic Design. I did take a few classes. I went into a major that would make great financial sense and give me a great stable career. Art. I hope you can sense my sarcasm. I went so far to get a Masters in Fine Art so I could be rich and famous. Actually, it was more so I could get a cushy ivory tower teaching career. At some point in my sophomore year, to be more serious in my art studies, I abandoned my website and threw myself into printmaking, painting, drawing, and some Graphic Design. From about 1998 - 2005, I did no coding what-so-ever. The GeoCities site say for years collecting digital dust.&lt;/p&gt;
&lt;p&gt;In 2005, I had bought an Apple iBook and I was soon graduating. Someone suggested that after my thesis show (I had at least a month of nothing to do), I should create a website for myself. &lt;/p&gt;
&lt;p&gt;Hold up! Lets go back a little bit. Lets travel back to those GeoCities days. How did I learn simple HTML? I bought one of those HTML books for dummies. I didn&apos;t have an internet connection at home but I did have a computer, a text editior, and some floppy disks. I would code in my text editior and save it to my floppy disk. I&apos;d take it to school and in the computer lab I would open the text file and copy/paste it into the GeoCities editor then make any changes I needed. &lt;/p&gt;
&lt;p&gt;When it came to images and graphics, I had to be more savvy. First of all, I had to find a lab with a scanner and a lab that had Photoshop installed on one or more computers. I mostly worked in the lab in the basement of Lovejoy Library on the SIUE campus. That one was full of Windows PCs. I needed to find a Mac lab. There was one on the other end of campus that had a scanner and the computers had Photoshop. I would go to that lab to scan pictures from magazines (which I&apos;m sure was not legal for me to publish them on the web) and my own photos. I think I made a simple graphic for the header of my website. I&apos;d save my work on to those wonderful floppy discs to later upload and code into my pages. I had to work and be resourceful. &lt;/p&gt;
&lt;p&gt;I do look back to those days fondly. I remember connecting with people on Usenet newsgroups, listserves, BBSs. I&apos;m old enough to remember using Gopher and stuff like Archie in the library. I used Telnet for email too. The commercial internet was still new and I found it so fascinating. I would talk to people from all over, trade mix-tapes and bootlegs of music, and I even made some real-life friends from other local universities such as Washington University in St. Louis. I remember meeting up with others to see concerts. There was no social media but Usenet, listserves, and GeoCities was probably as close as you were going to get to that. The people that used that in those days were not your mom and dad. They were &quot;nerds&quot; and college students (who were probably also &quot;nerds). Most regular people those days had no clue.&lt;/p&gt;
&lt;p&gt;Flash forward to 2005. By then was so out of the loop as far as coding goes. However, the web was more developed. I had my own internet connection. I could use WiFi at coffee shops. There were more resources for learning. Computers were better. I will say that some of my previous knowlege stuck but I had tons to learn. CSS was very new to me. So was JavaScript. Though in those days most were using jQuery. Also, what helped me was Dreamweaver and it&apos;s WYSIWYG editor. I woukd never use it today but it helped me at the time. It was my tool for about 5-6 years. Slowly I migrated to just using the code editor. Then I dumpted it for SublimeText. &lt;/p&gt;
&lt;p&gt;Between 2005 - 2011 I was just working on my own website to put art up on. I figured that would give me a place for my portfolio and help me get shows. It did. I was a good tool. I would just learn as I went. I made a lot of mistakes too. I cringe thinking about it.  &lt;/p&gt;
&lt;p&gt;In 2011, I made a decision that would change my life. I was an artist but I also taught classes at a community college from 2006-2008. In addition, I worked as a server for more income. In 2010 my mom passed away. I was fed up. I had a masters degree but I felt my life was going nowhere. Teaching didn&apos;t seem like it would lead me anywhere. I wasn&apos;t making a living off my art. Being a waitress was not what I loved (I hated it. I don&apos;t have that outgoing, people person personality.). By the time 2008 rolled around I lost my teaching job. From then to 2011 I was a waitress. When my mom was battling cancer I spent most of 2009/10 taking care of her. About 6 months after she died, I quit my job.&lt;/p&gt;
&lt;p&gt;I was going to be a freelance web designer. Looking back, I feel like I had to be nuts. I never had a client other than family, I knew nothing about selling, and my web development skills were lacking. I didn&apos;t know ANYTHING. I was in way over my head. However, I did find some clients and made some income. It wasn&apos;t sustainable but I learned a lot about code and I learned that I didn&apos;t like freelancing. I just didn&apos;t feel like I knew enough from many angles (business, sales, coding, and design). After about 7 months I started searching for jobs.&lt;/p&gt;
&lt;p&gt;My first job was at a car dealership group doing graphics and a little bit of work with editing content on their website. Some coding was involved. However, I was mostly doing graphic design - banners for the website, updaing content, some print design. It was fine in that it gave me experience and a steady paycheck. It was only part-time though.&lt;/p&gt;
&lt;p&gt;Luck would have it that the dealership switched to another CMS but my boss told me that the company that did their previous CMS/website was looking for a web designer. I really didn&apos;t think I could get the job but I sent in a resume and my boss gave me a good recommendation. My coding skills were not great but I could at least try. I was getting better with CSS and could do some really simple JavaScript (mostly editing). I was familiar with their CMS. It was worth a shot. They liked the work I did on it. I didn&apos;t break stuff and they liked the graphics I did on their platform. After a couple interviews I was offered the job. Now I was going to do some &quot;real&quot; coding. &lt;/p&gt;
&lt;p&gt;My new job involved me designing and coding websites, landing pages, editing and creating content for client websites, production, graphic design, and general support. The company was very small team so we were required to wear many hats. I started there in 2013 and worked there until 2017. I learned a ton there. I grew to really love CSS. I grew to love the coding part the most. I think I became very valuable there because I was willing to listen, learn, and take on anything. I learned to be independent and resourceful - though I think I always had those skills. I worked remotely from home so I did work unsupervised and had to keep myself on task and motivated. &lt;/p&gt;
&lt;p&gt;Unfortunately by mid-2016, the work was dwindling. Most of my co-workers left for new jobs and the company just didn&apos;t seem to be moving forward with anything. I used my freetime to learn. I spent all my time doing tutorials at teamtreehouse.com, youtube, creating projects for myself, and becoming more adept with JavaScript and modern tooling. I thought that I needed to get a new job and to do that I needed to level up my skills and &quot;get with the times&quot;. I need to get really serious. I needed to be a full on front-end developer. I love creating for the web. I love helping clients. I love the technology and the fact it is always changing and there is always something new to learn. I think it is exciting. I think it&apos;s more exciting now than it was in 1996.&lt;/p&gt;
&lt;p&gt;By the end of 2017 I was able to land my first real &quot;web developer&quot; job. I don&apos;t do design. I just code and help clients fix and add content. I use modern tooling like Gulp and Git. The command line is my friend. I&apos;m now doing something I deeply enjoy and find challenging. &lt;/p&gt;
&lt;p&gt;The funny thing is that I knew nearly 20 years ago what I should do but I had other experiences I had to try. I don&apos;t regret any of it becuase I think it makes me more well-rounded and a person with life experience outside of being a developer. I think it gives me a different perspective than most of my peers. Not having a formal education in computer science or development has made me scrappy, resourceful, and probably makes me want to prove myself more. I think even the art background wasn&apos;t a waste because I am open to many perspectives and will find creative solutions. To be an artist you have to make do with little, be scrappy, take risks, be resourceful, be independent. I think those things have helped me. However, I do suffer from imposter syndrome a lot but I&apos;m a fighter and can will myself to do anything. I work my ass off to get what I want. I bitch and moan a lot too. The lack of formal education, being a woman in a male dominated profession doesn&apos;t deter me. I don&apos;t think anything could stop me.&lt;/p&gt;
&lt;p&gt;Now I&apos;m a developer and the path I took to get there was long but I feel like I&apos;ve only just begun.&lt;/p&gt;</content:encoded><author>rebeccaeilering@gmail.com</author></item></channel></rss>