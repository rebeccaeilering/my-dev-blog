{"version":3,"sources":["webpack:///./src/components/UserInfo/UserInfo.jsx","webpack:///./src/components/PostTags/PostTags.jsx","webpack:///./src/components/SocialLinks/SocialLinks.jsx","webpack:///./src/templates/post.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/components/UserLinks/UserLinks.jsx","webpack:///./src/components/Footer/Footer.jsx","webpack:///./src/components/Header/Header.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/components/SEO/SEO.jsx"],"names":["UserInfo","render","userTwitter","this","props","config","expanded","react_default","a","createElement","dist","username","options","count","Component","PostTags","tags","className","map","tag","gatsby_browser_entry","key","style","textDecoration","to","kebabCase_default","SocialLinks","_this$props","postNode","postPath","mobile","post","frontmatter","url","urljoin","siteUrl","pathPrefix","iconSize","renderShareCount","filter","RedditShareButton","title","RedditIcon","round","size","RedditShareCount","TwitterShareButton","TwitterIcon","FacebookShareButton","quote","excerpt","FacebookIcon","FacebookShareCount","LinkedinShareButton","description","LinkedinIcon","LinkedinShareCount","TelegramShareButton","TelegramIcon","PostTemplate","slug","pageContext","data","markdownRemark","id","category_id","postDefaultCategoryID","layout","Helmet_default","siteTitle","SEO","postSEO","date","category","dangerouslySetInnerHTML","__html","html","components_PostTags_PostTags","components_SocialLinks_SocialLinks","components_UserInfo_UserInfo","React","pageQuery","siteTitleShort","siteTitleAlt","siteLogo","siteDescription","siteRss","siteFBAppID","googleAnalyticsID","disqusShortname","dateFromFormat","dateFormat","userName","userEmail","userLocation","userAvatar","userDescription","userLinks","label","iconClassName","copyright","themeColor","backgroundColor","replace","substr","slice","module","exports","UserLinks","getLinkElements","labeled","link","href","Footer","components_UserLinks_UserLinks","Header","class","MainLayout","children","name","content","components_Header_Header","components_Footer_Footer","image","postURL","postMeta","cover","blogURL","schemaOrgJSONLD","@context","@type","alternateName","push","itemListElement","position","item","@id","headline","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","type","JSON","stringify","property"],"mappings":"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","file":"component---src-templates-post-jsx-4b8d2f060c4b2bcae6f7.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Follow } from \"react-twitter-widgets\";\n\nclass UserInfo extends Component {\n  render() {\n    const { userTwitter } = this.props.config;\n    const { expanded } = this.props;\n    return (\n      <Follow\n        username={userTwitter}\n        options={{ count: expanded ? true : \"none\" }}\n      />\n    );\n  }\n}\n\nexport default UserInfo;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\n\nclass PostTags extends Component {\n  render() {\n    const { tags } = this.props;\n    return (\n      <div className=\"post-tag-container\">\n        <p>Tags: {tags &&\n          tags.map(tag => (\n            <Link\n              key={tag}\n              style={{ textDecoration: \"none\" }}\n              to={`/tags/${_.kebabCase(tag)}`}\n            >{tag}\n            </Link>\n          ))}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default PostTags;\n","import React, { Component } from \"react\";\nimport {\n  FacebookShareButton,\n  GooglePlusShareButton,\n  LinkedinShareButton,\n  TwitterShareButton,\n  TelegramShareButton,\n  RedditShareButton,\n  FacebookShareCount,\n  GooglePlusShareCount,\n  LinkedinShareCount,\n  RedditShareCount,\n  FacebookIcon,\n  TwitterIcon,\n  TelegramIcon,\n  GooglePlusIcon,\n  LinkedinIcon,\n  RedditIcon\n} from \"react-share\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./SocialLinks.css\";\n\nclass SocialLinks extends Component {\n  render() {\n    const { postNode, postPath, mobile } = this.props;\n    const post = postNode.frontmatter;\n    const url = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    const iconSize = mobile ? 24 : 36;\n    const filter = count => (count > 0 ? count : \"\");\n    const renderShareCount = count => (\n      <div className=\"share-count\">{filter(count)}</div>\n    );\n\n    return (\n      <div className=\"social-links\">\n        <p>Share this:</p>\n        <RedditShareButton url={url} title={post.title}>\n          <RedditIcon round size={iconSize} />\n          <RedditShareCount url={url}>\n            {count => renderShareCount(count)}\n          </RedditShareCount>\n        </RedditShareButton>\n        <TwitterShareButton url={url} title={post.title}>\n          <TwitterIcon round size={iconSize} />\n        </TwitterShareButton>\n        <FacebookShareButton url={url} quote={postNode.excerpt}>\n          <FacebookIcon round size={iconSize} />\n          <FacebookShareCount url={url}>\n            {count => renderShareCount(count)}\n          </FacebookShareCount>\n        </FacebookShareButton>\n        <LinkedinShareButton\n          url={url}\n          title={post.title}\n          description={postNode.excerpt}\n        >\n          <LinkedinIcon round size={iconSize} />\n          <LinkedinShareCount url={url}>\n            {count => renderShareCount(count)}\n          </LinkedinShareCount>\n        </LinkedinShareButton>\n        <TelegramShareButton url={url}>\n          <TelegramIcon round size={iconSize} />\n        </TelegramShareButton>\n      </div>\n    );\n  }\n}\n\nexport default SocialLinks;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\nimport UserInfo from \"../components/UserInfo/UserInfo\";\nimport PostTags from \"../components/PostTags/PostTags\";\nimport SocialLinks from \"../components/SocialLinks/SocialLinks\";\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\nimport \"./b16-tomorrow-dark.css\";\nimport \"./post.css\";\n\nexport default class PostTemplate extends React.Component {\n  render() {\n    const { slug } = this.props.pageContext;\n    const postNode = this.props.data.markdownRemark;\n    const post = postNode.frontmatter;\n    if (!post.id) {\n      post.id = slug;\n    }\n    if (!post.category_id) {\n      post.category_id = config.postDefaultCategoryID;\n    }\n    return (\n      <Layout>\n        <div>\n          <Helmet>\n            <title>{`${post.title} | ${config.siteTitle}`}</title>\n          </Helmet>\n          <SEO postPath={slug} postNode={postNode} postSEO />\n          <div>\n            <section className=\"main-container\">\n              <h1>{post.title}</h1>\n              <span>{post.date}</span>\n              <p>Category: <Link key={post.category} to={`/categories/${_.kebabCase(post.category)}`}>{post.category}</Link></p>\n              <div className=\"post-content\" dangerouslySetInnerHTML={{ __html: postNode.html }} />\n              <div className=\"post-meta\">\n                <PostTags tags={post.tags} />\n                <SocialLinks postPath={slug} postNode={postNode} />\n              </div>\n              <UserInfo config={config} />\n            </section>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        cover\n        date\n        category\n        tags\n      }\n      fields {\n        nextTitle\n        nextSlug\n        prevTitle\n        prevSlug\n        slug\n        date\n      }\n    }\n  }\n`;\n","const config = {\n  siteTitle: \"Rebecca's Developer Blog\", // Site title.\n  siteTitleShort: \"Dev Blog\", // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\n  siteTitleAlt: \"Rebecca's Developer Blog\", // Alternative site title for SEO.\n  siteLogo: \"/logos/logo-1024.png\", // Logo used for SEO and manifest.\n  siteUrl: \"https://rebeccaeilering.github.io\", // Domain of your website without pathPrefix.\n  pathPrefix: \"/dev-blog\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-advanced-starter/.\n  siteDescription: \"A GatsbyJS stater with Advanced design in mind.\", // Website description used for RSS feeds/meta description tag.\n  siteRss: \"/rss.xml\", // Path to the RSS file.\n  siteFBAppID: \"1825356251115265\", // FB Application ID for using app insights\n  googleAnalyticsID: \"UA-47311644-5\", // GA tracking ID.\n  disqusShortname: \"https-vagr9k-github-io-gatsby-advanced-starter\", // Disqus shortname.\n  postDefaultCategoryID: \"Web Development\", // Default category for posts.\n  dateFromFormat: \"MM/DD/YYYY\", // Date format used in the frontmatter.\n  dateFormat: \"MM/DD/YYYY\", // Date format for display.\n  userName: \"Rebecca Eilering\", // Username to display in the author segment.\n  userEmail: \"rebeccaeilering@gmail.com\", // Email used for RSS feed's author segment\n  userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\n  userLocation: \"Springfield, IL\", // User location to display in the author segment.\n  userAvatar: \"https://api.adorable.io/avatars/150/test.png\", // User avatar to display in the author segment.\n  userDescription:\n    \"I'm a front end web developer\", // User description to display in the author segment.\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  userLinks: [\n    {\n      label: \"GitHub\",\n      url: \"https://github.com/rebeccaeilering/\",\n      iconClassName: \"fa fa-github\"\n    },\n    {\n      label: \"Twitter\",\n      url: \"https://twitter.com/rebeccaeilering\",\n      iconClassName: \"fa fa-twitter\"\n    },\n    {\n      label: \"Email\",\n      url: \"mailto:rebeccaeilering@gmail.com\",\n      iconClassName: \"fa fa-envelope\"\n    }\n  ],\n  copyright: \"Copyright © 2019 Rebecca's Developer Blog\", // Copyright string for the footer of the website and RSS feed.\n  themeColor: \"#c62828\", // Used for setting manifest and progress theme colors.\n  backgroundColor: \"#e0e0e0\" // Used for setting manifest background color.\n};\n\n// Validate\n\n// Make sure pathPrefix is empty if not needed\nif (config.pathPrefix === \"/\") {\n  config.pathPrefix = \"\";\n} else {\n  // Make sure pathPrefix only contains the first forward slash\n  config.pathPrefix = `/${config.pathPrefix.replace(/^\\/|\\/$/g, \"\")}`;\n}\n\n// Make sure siteUrl doesn't have an ending forward slash\nif (config.siteUrl.substr(-1) === \"/\")\n  config.siteUrl = config.siteUrl.slice(0, -1);\n\n// Make sure siteRss has a starting forward slash\nif (config.siteRss && config.siteRss[0] !== \"/\")\n  config.siteRss = `/${config.siteRss}`;\n\nmodule.exports = config;\n","import React, { Component } from \"react\";\nimport \"./UserLinks.css\";\n\nclass UserLinks extends Component {\n  getLinkElements() {\n    const { userLinks } = this.props.config;\n    const { labeled } = this.props;\n    return userLinks.map(link => (\n      <a key={link.label} href={link.url}>\n        {labeled ? link.label : \"\"}\n      </a>\n    ));\n  }\n  render() {\n    const { userLinks } = this.props.config;\n    if (!userLinks) {\n      return null;\n    }\n    return <div className=\"user-links\">{this.getLinkElements()}</div>;\n  }\n}\n\nexport default UserLinks;\n","import React, { Component } from \"react\";\nimport { Link } from \"gatsby\";\nimport UserLinks from \"../UserLinks/UserLinks\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./Footer.css\";\n\nclass Footer extends Component {\n  render() {\n    const url = config.siteRss;\n    const { copyright } = config;\n    if (!copyright) {\n      return null;\n    }\n    return (\n      <footer>\n        <div className=\"container\">\n          <span>{copyright}</span>\n          <div className=\"social-links\">\n            <Link to={url}>\n              Subscribe\n            </Link>\n            <UserLinks config={config} labeled />\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n\n","import React, { Component } from \"react\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./Header.css\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <header>\n        <div className=\"container\">\n          <a class=\"site-title\" href=\"/\">{config.siteTitle}</a>\n          <nav>\n            <a className=\"header-btn\" href=\"/about\">About</a>\n          </nav>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../data/SiteConfig\";\nimport Footer from \"../components/Footer/Footer\";\nimport Header from \"../components/Header/Header\";\nimport \"../assets/css/main.css\";\n\nexport default class MainLayout extends React.Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <div className=\"wrapper\">\n        <Helmet>\n          <meta name=\"description\" content={config.siteDescription} />\n        </Helmet>\n        <Header />\n        {children}\n        <Footer />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      image = postMeta.cover;\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      );\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n"],"sourceRoot":""}